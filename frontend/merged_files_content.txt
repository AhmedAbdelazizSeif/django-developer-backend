# File: ./eslint.config.js
import js from '@eslint/js'
import globals from 'globals'
import react from 'eslint-plugin-react'
import reactHooks from 'eslint-plugin-react-hooks'
import reactRefresh from 'eslint-plugin-react-refresh'

export default [
  { ignores: ['dist'] },
  {
    files: ['**/*.{js,jsx}'],
    languageOptions: {
      ecmaVersion: 2020,
      globals: globals.browser,
      parserOptions: {
        ecmaVersion: 'latest',
        ecmaFeatures: { jsx: true },
        sourceType: 'module',
      },
    },
    settings: { react: { version: '18.3' } },
    plugins: {
      react,
      'react-hooks': reactHooks,
      'react-refresh': reactRefresh,
    },
    rules: {
      ...js.configs.recommended.rules,
      ...react.configs.recommended.rules,
      ...react.configs['jsx-runtime'].rules,
      ...reactHooks.configs.recommended.rules,
      'react/jsx-no-target-blank': 'off',
      'react-refresh/only-export-components': [
        'warn',
        { allowConstantExport: true },
      ],
    },
  },
]


# File: ./merged_files_content.txt


# File: ./package.json
{
  "name": "frontend",
  "private": true,
  "version": "0.0.0",
  "type": "module",
  "scripts": {
    "dev": "vite",
    "build": "vite build",
    "lint": "eslint .",
    "preview": "vite preview"
  },
  "dependencies": {
    "@fortawesome/fontawesome-svg-core": "^6.7.2",
    "@fortawesome/free-brands-svg-icons": "^6.7.2",
    "@fortawesome/free-solid-svg-icons": "^6.7.2",
    "@fortawesome/react-fontawesome": "^0.2.2",
    "axios": "^1.7.9",
    "lucide-react": "^0.469.0",
    "react": "^18.3.1",
    "react-dom": "^18.3.1",
    "react-github-calendar": "^4.5.2",
    "react-router-dom": "^7.1.1",
    "react-syntax-highlighter": "^15.6.1",
    "styled-components": "^6.1.13",
    "typewriter-effect": "^2.21.0"
  },
  "devDependencies": {
    "@eslint/js": "^9.17.0",
    "@types/react": "^18.3.18",
    "@types/react-dom": "^18.3.5",
    "@vitejs/plugin-react": "^4.3.4",
    "autoprefixer": "^10.4.20",
    "eslint": "^9.17.0",
    "eslint-plugin-react": "^7.37.2",
    "eslint-plugin-react-hooks": "^5.0.0",
    "eslint-plugin-react-refresh": "^0.4.16",
    "globals": "^15.14.0",
    "postcss": "^8.4.49",
    "tailwindcss": "^3.4.17",
    "vite": "^6.0.11"
  }
}


# File: ./tailwind.config.js
/** @type {import('tailwindcss').Config} */
module.exports = {
  content: [
    "./index.html",
    "./src/**/*.{js,jsx,ts,tsx}",
  ],
  theme: {
    extend: {
      keyframes: {
        fadeIn: {
          '0%': { opacity: '0' },
          '100%': { opacity: '1' },
        },
      },
      animation: {
        fadeIn: 'fadeIn 2s ease-in-out forwards',
      },
    },
  },
  plugins: [],
}



# File: ./vite.config.js
import { defineConfig } from 'vite'
import react from '@vitejs/plugin-react'

// https://vite.dev/config/
export default defineConfig({
  plugins: [react()],
  server: {
    host: '0.0.0.0', // This makes it accessible from the network
    port: 5173, // You can specify the port if needed
  },
})


# File: ./index.html
<!DOCTYPE html>
<html lang="en">
  <head>
    <!-- Essential Meta Tags -->
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=5.0" />
    
    <!-- Primary Meta Tags -->
    <title>Ahmed Seif | Senior Data Scientist & ML Engineer | Python & AI Expert</title>
    <meta name="title" content="Ahmed Seif | Senior Data Scientist & ML Engineer | Python & AI Expert" />
    <meta name="description" content="Expert Data Scientist with proven success in AI/ML solutions, IoT systems, and predictive analytics. Portfolio showcasing 85% accuracy in Forex prediction models, 30% KYC process optimization, and innovative healthcare solutions. Skilled in TensorFlow, PyTorch, Python, and full-stack development." />
    <meta name="author" content="Ahmed Seif" />
    <meta name="robots" content="index, follow" />
    <meta name="language" content="English" />
    
    <!-- Professional Keywords -->
    <meta name="keywords" content="Data Scientist, Machine Learning Engineer, Python Developer, AI Expert, Deep Learning Specialist, TensorFlow Expert, PyTorch Developer, IoT Solutions Architect, Predictive Analytics, Computer Vision Engineer, Alexandria Egypt, Remote Data Scientist, KYC Process Optimization, Smart Mirror AR, Forex Prediction Models, Healthcare AI Solutions, Real-time Analytics" />
    
    <!-- Open Graph Meta Tags -->
    <meta property="og:type" content="website" />
    <meta property="og:url" content="https://ahmed-seif.com/" />
    <meta property="og:title" content="Ahmed Seif | Data Science & AI Solutions Portfolio" />
    <meta property="og:description" content="Innovative Data Scientist specializing in ML/AI solutions with proven results: 85% accuracy in financial predictions, 30% KYC optimization, and groundbreaking IoT healthcare systems. Expert in Python, TensorFlow, and full-stack development." />
    <meta property="og:image" content="https://ahmed-seif.com/assets/profile-banner.jpg" />
    
    <!-- Twitter Card Meta Tags -->
    <meta name="twitter:card" content="summary_large_image" />
    <meta name="twitter:url" content="https://ahmed-seif.com/" />
    <meta name="twitter:title" content="Ahmed Seif | Data Science & AI Solutions Expert" />
    <meta name="twitter:description" content="Portfolio of a Data Scientist & ML Engineer showcasing innovative AI solutions in finance, healthcare, and IoT. Featured: Smart Mirror AR, Forex Prediction System, ALS BlinkGuard." />
    <meta name="twitter:image" content="https://ahmed-seif.com/assets/profile-banner.jpg" />
    
    <!-- LinkedIn Meta Tags -->
    <meta property="linkedin:owner" content="Ahmed Seif" />
    <meta property="linkedin:title" content="Data Scientist & ML Engineer Portfolio" />
    
    <!-- Technical Meta Tags -->
    <meta name="format-detection" content="telephone=no" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="theme-color" content="#ffffff" />
    
    <!-- Canonical URL -->
    <link rel="canonical" href="https://ahmed-seif.com/" />
    
    <!-- Structured Data -->
    <script type="application/ld+json">
    {
      "@context": "https://schema.org",
      "@type": "Person",
      "name": "Ahmed Seif",
      "jobTitle": "Data Scientist",
      "description": "Expert Data Scientist and ML Engineer specializing in AI solutions, predictive analytics, and IoT systems",
      "alumniOf": "Alexandria University",
      "knowsAbout": ["Data Science", "Machine Learning", "Python Development", "AI Solutions", "IoT Systems", "Deep Learning"],
      "hasCredential": [
        {
          "@type": "EducationalOccupationalCredential",
          "name": "IBM Data Science Professional Certificate",
          "dateCreated": "2023"
        },
        {
          "@type": "EducationalOccupationalCredential",
          "name": "DataCamp Data Scientist Associate",
          "dateCreated": "2023"
        }
      ],
      "url": "https://ahmed-seif.com",
      "sameAs": [
        "https://github.com/AhmedAbdelazizSeif",
        "https://linkedin.com/in/AhmedAbdelazizSeif"
      ]
    }
    </script>
</head>
  <body class="bg-gray-900 text-white">
    <div id="root"></div>
    <script type="module" src="/src/main.jsx"></script>
  </body>
</html>



# File: ./.gitignore
# Logs
logs
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*
pnpm-debug.log*
lerna-debug.log*

node_modules
dist
dist-ssr
*.local

# Editor directories and files
.vscode/*
!.vscode/extensions.json
.idea
.DS_Store
*.suo
*.ntvs*
*.njsproj
*.sln
*.sw?
*.env


# File: ./README.md
# React + Vite

This template provides a minimal setup to get React working in Vite with HMR and some ESLint rules.

Currently, two official plugins are available:

- [@vitejs/plugin-react](https://github.com/vitejs/vite-plugin-react/blob/main/packages/plugin-react/README.md) uses [Babel](https://babeljs.io/) for Fast Refresh
- [@vitejs/plugin-react-swc](https://github.com/vitejs/vite-plugin-react-swc) uses [SWC](https://swc.rs/) for Fast Refresh


# File: ./postcss.config.js
export default {
  plugins: {
    tailwindcss: {},
    autoprefixer: {},
  },
}


# File: ./src/main.jsx
import { StrictMode } from 'react'
import { createRoot } from 'react-dom/client'
import './index.css'
import App from './App.jsx'

createRoot(document.getElementById('root')).render(
  <StrictMode>
    <App />
  </StrictMode>,
)


# File: ./src/index.css
@tailwind base;
@tailwind components;
@tailwind utilities;
@keyframes fadeIn {
  from { opacity: 0; }
  to { opacity: 1; }
}
/* Add custom CSS if needed */
html, body {
  margin: 0;
  padding: 0;
  font-family: 'JetBrains Mono', monospace;
}



# File: ./src/App.jsx
import React from 'react'
import { BrowserRouter as Router, Routes, Route } from 'react-router-dom'

import Layout from './components/Layout'
import Home from './pages/Home'
import About from './pages/About'
import Contact from './pages/Contact'
import Projects from './pages/Projects'
import Articles from './pages/Articles'
import Github from './pages/Github'
import Settings from './pages/Settings'
import ProjectDetail from './pages/ProjectDetail'
import SingleArticlePage from './pages/ArticleDetail'
import ErrorBoundary from './components/ErrorBoundary';


function App() {
  return (
    <Router>
      <Layout>
        <Routes>
          <Route path="/" element={<Home />} />
          <Route path="/about" element={<About />} />
          <Route path="/contact" element={<Contact />} />
          <Route path="/projects" element={<Projects />} />
          <Route path="/articles" element={<Articles />} />
          <Route path="/articles/:id" element={<SingleArticlePage />} />

          <Route path="/github" element={<Github />} />
          <Route path="/settings" element={<Settings />} />
          <Route path="/projects/:projectName" element={<ProjectDetail />} />

        </Routes>
      </Layout>
    </Router>
  )
}

export default App



# File: ./src/App.css
#root {
  max-width: 1280px;
  margin: 0 auto;
  padding: 2rem;
  text-align: center;
}

.logo {
  height: 6em;
  padding: 1.5em;
  will-change: filter;
  transition: filter 300ms;
}
.logo:hover {
  filter: drop-shadow(0 0 2em #646cffaa);
}
.logo.react:hover {
  filter: drop-shadow(0 0 2em #61dafbaa);
}

@keyframes logo-spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

@media (prefers-reduced-motion: no-preference) {
  a:nth-of-type(2) .logo {
    animation: logo-spin infinite 20s linear;
  }
}

.card {
  padding: 2em;
}

.read-the-docs {
  color: #888;
}


# File: ./src/styles/ContactCode.module.css
.code {
  counter-reset: line;
  font-size: 1.2rem;
  line-height: 2rem;
}

.line::before {
  content: counter(line);
  counter-increment: line;
  margin-right: 1rem;
  color: grey;
}

.code a {
  color: var(--accent-color);
  text-decoration: none;
}

.code a:hover {
  text-decoration: underline;
}

.className {
  color: var(--accent-color);
}

@media screen and (max-width: 600px) {
  .code {
    font-size: 0.85rem;
    line-height: 1.5rem;
  }
}


# File: ./src/styles/Bottombar.module.css
.bottomBar {
  background: var(--bottombar-bg);
  height: 25px;
  border-top: 1px solid var(--bottombar-border);
  color: rgb(225, 228, 232);
  padding: 0 0.5rem;
  display: flex;
  align-items: center;
  justify-content: space-between;
  font-size: 0.8rem;
}

.bottomBar a {
  color: white;
  text-decoration: none;
}

.icon {
  margin-right: 4px;
}

.container {
  display: flex;
  align-items: center;
}

.section {
  display: flex;
  margin-right: 0.5rem;
  height: 24px;
  align-items: center;
  padding: 0 0.2rem;
  cursor: pointer;
  font-family: 'Source Sans Pro', sans-serif;
}

.section:hover {
  background: var(--bottombar-hover-bg);
}

@media screen and (max-width: 600px) {
  .bottomBar {
    font-size: 0.6rem;
  }
  .section {
    margin-right: 0.5rem;
  }
}


# File: ./src/styles/ArticleCard.module.css
/* frontend/src/styles/ArticleCard.module.css */

/* Card Container */
.card {
  display: flex;
  flex-direction: column;
  background: #2b2b2b; /* Dark background */
  border-radius: 10px;
  overflow: hidden;
  text-decoration: none;
  color: #fff;
  transition: transform 0.3s ease, box-shadow 0.3s ease;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);
}

.card:hover {
  transform: translateY(-5px);
  box-shadow: 0 8px 16px rgba(0, 0, 0, 0.5);
}

/* Image Container */
.imageContainer {
  max-height: 200px;
  overflow: hidden;
  position: relative;
}

.imageContainer img {
  width: 100%;
  display: block;
  object-fit: cover;
}

/* Content */
.content {
  padding: 1rem;
  display: flex;
  flex-direction: column;
  justify-content: space-between;
}

/* Title */
.title {
  color: #f1f1f1;
  font-size: 1.25rem;
  margin-bottom: 0.5rem;
  font-weight: 600;
}

/* Snippet / short text */
.snippet {
  margin-bottom: 1rem;
  line-height: 1.4;
  color: #ccc;
}

/* Read More Link */
.readMore {
  align-self: flex-start;
  background-color: #ff5757;
  color: #fff;
  border: none;
  padding: 0.5rem 1rem;
  text-decoration: none;
  border-radius: 5px;
  font-weight: 500;
  transition: background-color 0.3s ease;
}

.readMore:hover {
  background-color: #e63d3d;
  color: #fff;
}


# File: ./src/styles/Sidebar.module.css
.sidebar {
  background: var(--sidebar-bg);
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  width: 4.5vw;
  min-width: 40px;
  height: calc(100vh - 30px - 25px);
}

.iconContainer {
  cursor: pointer;
  width: 100%;
}

.iconContainer:hover {
  background: var(--sidebar-hover-bg);
}

.active {
  border-left: 2px solid var(--accent-color);
}

.icon {
  height: 48px;
  width: 48px;
  padding: 0.65rem 0;
  display: block;
  margin: 0 auto;
}

@media screen and (min-width: 2000px) {
  .sidebar {
    width: 2.5vw;
  }
}

@media screen and (max-width: 1100px) {
  .sidebar {
    width: 6vw;
  }
}

@media screen and (max-width: 900px) {
  .sidebar {
    width: 8vw;
  }
  .icon {
    height: 48px;
    width: 48px;
    padding: 0.6rem;
  }
}

@media screen and (max-width: 600px) {
  .sidebar {
    width: 10vw;
  }
  .icon {
    height: 40px;
    width: 40px;
    padding: 0.6rem;
  }
}


# File: ./src/styles/ContactPage.module.css
.container {
  display: flex;
  justify-content: center;
  gap: 2rem;
}

.container > * {
  flex: 1;
}

.container > div:first-child {
  border-right: 1px solid var(--accent-color);
}

.container h1 {
  margin-bottom: 2rem;
  font-size: 1.5rem;
}

.flex {
  display: flex;
  gap: 1rem;
}

.form label {
  display: block;
  margin-bottom: 0.5rem;
  text-transform: uppercase;
  letter-spacing: 2px;
  font-size: 0.8rem;
}

.form input,
.form textarea {
  font-family: 'JetBrains Mono';
  margin-bottom: 1.5rem;
  background: var(--article-bg);
  color: var(--text-color);
  border: none;
  font-size: 1rem;
  padding: 0.75rem;
  width: 100%;
  resize: none;
}

.form input:focus,
.form textarea:focus {
  outline: 1px solid var(--accent-color);
}

.form button {
  background: var(--accent-color);
  color: var(--main-bg);
  border: none;
  cursor: pointer;
  padding: 0.5rem 1rem;
  font-size: 0.9rem;
  font-weight: bold;
  text-transform: uppercase;
}

.heading {
  margin-bottom: 1.5rem;
}

@media screen and (max-width: 1200px) {
  .container {
    display: block;
  }
  .container > div:first-child {
    border-right: none;
    margin-bottom: 2.5rem;
  }
}

@media screen and (max-width: 600px) {
  .flex {
    display: block;
  }
  .form input {
    font-size: 0.85rem;
  }
}


# File: ./src/styles/ProjectsPage.module.css
.container {
  margin: 1.5rem 0;
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(240px, 1fr));
  gap: 1.5rem;
}


# File: ./src/styles/ArticlesPage.module.css
/* frontend/src/styles/ArticlesPage.module.css */

.page {
  min-height: 100vh;
  padding: 2rem;
  color: #fff;
}

.pageTitle {
  font-size: 2.5rem;
  margin-bottom: 0.5rem;
  text-align: center;
  color: #ff5757;
  animation: slideIn 0.5s ease forwards;
}

@keyframes slideIn {
  0% { opacity: 0; transform: translateX(-10px); }
  100% { opacity: 1; transform: translateX(0); }
}

.subText {
  text-align: center;
  margin-bottom: 2rem;
  font-size: 1.2rem;
  color: #ccc;
}

.articlesGrid {
  display: grid;
  gap: 1.5rem;
  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
}

/* Smaller screens adjustments */
@media screen and (max-width: 900px) {
  .articlesGrid {
    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
  }
}


# File: ./src/styles/Explorer.module.css
.explorer {
  background: var(--explorer-bg);
  width: 18vw;
  color: rgb(225, 228, 232);
  font-family: 'Source Sans Pro', sans-serif;
  border-right: 1px solid var(--explorer-border);
}

.title {
  padding: 0.5rem 0.75rem;
  font-weight: 300;
  text-transform: uppercase;
  font-size: 0.9rem;
  letter-spacing: 1px;
  margin-bottom: 0.75rem;
}

.heading {
  text-transform: uppercase;
  font-weight: bold;
  font-size: 0.8rem;
  letter-spacing: 1px;
  display: flex;
  align-items: center;
  cursor: pointer;
  padding: 0 0.5rem;
}

.checkbox {
  position: absolute;
  opacity: 0;
  z-index: -1;
}

.files {
  padding: 0.5rem 0;
  cursor: pointer;
}

.file {
  padding: 0.2rem 1rem;
  display: flex;
  align-items: center;
  font-size: 0.875rem;
}

.file p {
  margin-left: 5px;
}

.file:hover {
  background: var(--explorer-hover-bg);
}

.chevron {
  transition: transform 0.2s;
}

@media screen and (min-width: 2000px) {
  .explorer {
    width: 10vw;
  }
}

@media screen and (max-width: 900px) {
  .explorer {
    width: 20vw;
  }
}

@media screen and (max-width: 600px) {
  .explorer {
    display: none;
  }
}


# File: ./src/styles/ProjectDetail.module.css
/* frontend/src/styles/ProjectDetail.module.css */

.container {
  background-color: #1e1e1e; /* Dark VSCode-like background */
  color: #cccccc;
  min-height: 100vh;
  padding: 2rem;
  box-sizing: border-box;
}

/* Optional: add a fade-in or slide-in animation */
@keyframes fadeInUp {
  0% {
    opacity: 0;
    transform: translateY(10px);
  }
  100% {
    opacity: 1;
    transform: translateY(0);
  }
}

.vscodeTheme {
  animation: fadeInUp 0.4s ease forwards;
}

.title {
  color: #dcdcaa; /* Contrasting color for the title */
  font-size: 2rem;
  margin-bottom: 1rem;
  border-bottom: 1px solid #333;
  padding-bottom: 0.5rem;
}

.imageContainer {
  margin: 2rem 0;
  text-align: center;
}

.image {
  max-width: 600px;
  width: 100%;
  border-radius: 8px;
  box-shadow: 0 2px 12px rgba(0,0,0,0.5);
}

.content {
  line-height: 1.6;
  font-size: 1rem;
}

/* The project description text container */
.extendedDescription {
  margin-bottom: 2rem;
}

/* Style headings inside extendedDescription */
.extendedDescription h2,
.extendedDescription h3 {
  color: #569cd6;
  margin-top: 1.5rem;
  margin-bottom: 0.5rem;
}
.extendedDescription p {
  margin-bottom: 1rem;
  color: #cccccc;
}

/* You can style any <pre><code> blocks if your text has them */
.extendedDescription pre {
  background-color: #2d2d2d;
  color: #cccccc;
  padding: 1rem;
  border-radius: 4px;
  overflow-x: auto;
  margin-bottom: 1rem;
}

/* Skills Section */
.skillsSection {
  margin-top: 2rem;
  padding: 1rem;
  border: 1px dashed #444;
}

.skillsSection h2 {
  color: #c586c0;
  margin-bottom: 0.5rem;
}

/* Source Code Section */
.sourceCode {
  margin-top: 2rem;
  padding: 1rem 0;
  border-top: 1px solid #333;
}

.sourceCode h2 {
  margin-bottom: 0.5rem;
  color: #4ec9b0;
}

.sourceLink {
  color: #4ec9b0;
  text-decoration: none;
}

.sourceLink:hover {
  text-decoration: underline;
}

/* Loading / Error States */
.loadingContainer {
  display: flex;
  justify-content: center;
  align-items: center;
  min-height: 50vh;
}

.loadingSpinner {
  color: #fff;
  font-size: 1.5rem;
}

.error {
  color: #f44747;
  text-align: center;
  margin-top: 2rem;
}


# File: ./src/styles/Layout.module.css
@import url('https://fonts.googleapis.com/css2?family=JetBrains+Mono:wght@300;400;500;600&display=swap');

.main {
  display: flex;
  background: var(--main-bg);
}

.content {
  padding: 2rem;
  color: var(--text-color);
  font-family: 'JetBrains Mono', monospace;
  flex: 1;
  height: 85vh;
  overflow-y: auto;
  scroll-behavior: smooth;
}

.content {
  scrollbar-width: 10px;
  scrollbar-color: var(--accent-color);
}

.content::-webkit-scrollbar {
  width: 15px;
}

.content::-webkit-scrollbar-track {
  background: var(--scrollbar-track-bg);
  border-left: 1px solid #1e1f29;
}

.content::-webkit-scrollbar-thumb {
  background: var(--scrollbar-thumb-bg);
  border-left: 1px solid #1e1f29;
}

@media screen and (max-width: 600px) {
  .content {
    padding: 2rem 1rem;
  }
}


# File: ./src/styles/GithubPage.module.css
.user {
  background: var(--article-bg);
  padding: 1.5rem 1rem;
  display: flex;
  justify-content: center;
  align-items: center;
  height: 100px;
  margin-bottom: 1.5rem;
}

.user > div {
  display: flex;
  flex-wrap: wrap;
  text-align: center;
  justify-content: center;
  align-items: center;
  border-right: 2px solid var(--accent-color);
  padding: 0 1rem;
  height: 100%;
}

.user > div:last-child {
  border-right: none;
}

.username {
  margin-left: 10px;
}

.container {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(240px, 1fr));
  gap: 1.5rem;
  margin: 1.5rem 0;
}

.title {
  margin-bottom: 1.5rem;
}

.contributions article {
  width: 100% !important;
}

@media screen and (max-width: 900px) {
  .user h3 {
    font-size: 1rem;
  }
}

@media screen and (max-width: 600px) {
  .user h3 {
    font-size: 14px;
  }
  .username {
    display: none;
  }
}


# File: ./src/styles/SingleArticlePage.module.css
/* frontend/src/styles/SingleArticlePage.module.css */

.container {
    background: #1f1f1f; /* Darkish background */
    min-height: 100vh;
    padding: 2rem;
    display: flex;
    justify-content: center;
    align-items: flex-start;
  }
  
  .loading {
    color: #fff;
    font-size: 1.5rem;
    text-align: center;
    margin-top: 50px;
  }
  
  .articleWrapper {
    background: #2c2c2c; /* Slightly lighter than container */
    border-radius: 8px;
    max-width: 800px;
    width: 100%;
    padding: 2rem;
    color: #fff;
    box-shadow: 0 4px 12px rgba(0,0,0,0.3);
    animation: fadeIn 0.5s ease forwards;
  }
  
  @keyframes fadeIn {
    0% { opacity: 0; transform: translateY(10px); }
    100% { opacity: 1; transform: translateY(0); }
  }
  
  .title {
    margin-bottom: 1rem;
    font-size: 2rem;
    font-weight: 700;
    color: #ff5757; /* highlight color */
  }
  
  /* Article Image */
  .articleImage {
    width: 100%;
    max-height: 400px;
    object-fit: cover;
    border-radius: 8px;
    margin-bottom: 1.5rem;
    box-shadow: 0 2px 10px rgba(0,0,0,0.4);
  }
  
  /* Language Switch Buttons */
  .switchContainer {
    margin-bottom: 1.5rem;
    display: flex;
    gap: 1rem;
  }
  
  .switchBtn, .switchActive {
    padding: 0.5rem 1rem;
    background-color: transparent;
    color: #fff;
    border: 2px solid #ff5757;
    border-radius: 4px;
    font-weight: 500;
    cursor: pointer;
    transition: 0.3s ease;
  }
  
  .switchBtn:hover {
    background-color: #ff5757;
    color: #fff;
  }
  
  .switchActive {
    background-color: #ff5757;
    color: #fff;
    cursor: default;
  }
  
  .content {
    line-height: 1.7;
    font-size: 1.1rem;
  }
  
  /* Prism code blocks inside content */
  .content pre {
    background-color: #2a2a2a;
    padding: 1rem;
    border-radius: 4px;
    overflow: auto;
    margin-bottom: 1rem;
    font-size: 0.95rem;
  }
  
  .content code {
    font-family: Consolas, Monaco, 'Courier New', Courier, monospace;
  }
  
  .date {
    font-size: 0.9rem;
    color: #aaa;
    margin-top: 1rem;
  }
  

# File: ./src/styles/globals.css
@import url('https://fonts.googleapis.com/css2?family=Source+Sans+Pro:wght@400&display=swap');

*,
*::before,
*::after {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

/* Tags */
.react {
  border: 0.1rem solid rgb(97, 218, 251);
}
.react:hover {
  background: rgba(97, 218, 251, 0.25);
}

.node {
  border: 0.1rem solid rgb(131, 205, 41);
}
.node:hover {
  background: rgba(131, 205, 41, 0.25);
}

.mongodb {
  border: 0.1rem solid rgb(67, 153, 52);
}
.mongodb:hover {
  background: rgba(67, 153, 52, 0.25);
}

.redux {
  border: 0.1rem solid rgb(118, 74, 188);
}
.redux:hover {
  background: rgba(118, 74, 188, 0.25);
}

.razorpay {
  border: 0.1rem solid rgb(82, 143, 240);
}
.razorpay:hover {
  background: rgba(82, 143, 240, 0.25);
}

.material-ui {
  border: 0.1rem solid rgb(25, 118, 210);
}
.material-ui:hover {
  background: rgba(25, 118, 210, 0.25);
}

.bulma {
  border: 0.1rem solid rgb(0, 209, 178);
}
.bulma:hover {
  background: rgb(0, 209, 178, 0.25);
}

.next {
  border: 2px solid rgb(0, 112, 243);
}
.next:hover {
  background: rgba(0, 112, 243, 0.25);
}

.tailwind {
  border: 2px solid rgb(6, 182, 212);
}
.tailwind:hover {
  background: rgba(6, 182, 212, 0.25);
}

.react-query {
  border: 2px solid rgb(255, 65, 84);
}
.react-query:hover {
  background: rgba(255, 65, 84, 0.25);
}

.css-modules {
  border: 2px solid rgb(21, 114, 182);
}
.css-modules:hover {
  background: rgba(21, 114, 182, 0.25);
}


# File: ./src/styles/ThemeInfo.module.css
.container {
  display: flex;
  flex-direction: column;
  align-items: center;
  margin: 1.5rem 0;
  text-align: center;
  padding: 0 1.5rem;
}

.info {
  margin-top: 1rem;
  display: flex;
  flex-direction: column;
  justify-content: space-between;
}

.info button {
  margin-top: 0.75rem;
  border: none;
  background: var(--button-bg);
  color: var(--button-text);
  padding: 0.15rem 0.5rem;
  font-weight: 600;
  cursor: pointer;
}

.info button:focus {
  outline: 1px solid var(--accent-color);
}


# File: ./src/styles/Titlebar.module.css
.titlebar {
  background: var(--titlebar-bg);
  height: 30px;
  padding: 0 0.5rem;
  display: flex;
  align-items: center;
  justify-content: center;
  color: #fff;
  font-family: 'Source Sans Pro', sans-serif;
  font-size: 0.85rem;
  border-bottom: 1px solid #191d20;
}

.items {
  flex: 1;
  display: flex;
  margin-right: auto;
  margin-left: 0.5rem;
}

.title {
  flex: 1;
  text-align: center;
}

.items > * {
  padding: 0 0.5rem;
  cursor: pointer;
}

.windowButtons {
  flex: 1;
  display: flex;
  align-items: center;
  margin-left: auto;
}

.windowButtons * {
  margin-left: 0.5rem;
  height: 13px;
  width: 13px;
  border-radius: 50%;
  cursor: pointer;
}

.minimize {
  background: #f1fa8c;
  margin-left: auto;
}

.maximize {
  background: #50fa7b;
}

.close {
  background: #ff5555;
}

@media screen and (max-width: 900px) {
  .items p {
    display: none;
  }
  .title {
    flex: 4;
  }
}


# File: ./src/styles/HomePage.module.css
@import url('https://fonts.googleapis.com/css2?family=Montserrat:wght@900&display=swap');

.container {
  display: flex;
  justify-content: center;
  height: 75vh;
  flex-direction: column;
  position: relative;
}

.profileImage {
  position: absolute; /* Position it absolutely within the container */
  top: 10%; /* Adjust as needed */
  left: 80%; /* Center horizontally */
  transform: translateX(-50%); /* Center horizontally */
  width: 400px; /* Adjust size as needed */
  height: 400px; /* Adjust size as needed */
  border-radius: 30%; /* Make it circular */
  object-fit: cover; /* Ensure the image covers the area without distortion */
  border: 4px solid var(--accent-color); /* Optional: Add a border */
  z-index: 3;  /* Ensure it's above other elements */
}

.background {
  font-size: 5rem;
  font-family: 'Montserrat';
  line-height: 1.1;
  color: var(--bg-text);
  position: absolute;
  z-index: 1;
}

.foreground {
  position: relative; /* Add this if not already present */
  z-index: 2;
  display: flex;
  color: var(--accent-color);
  justify-content: space-between;
  align-items: center;
}

.name {
  color: #eee;
  font-size: 3.5rem;
  font-weight: 500;
  margin-bottom: 0.5rem;
}

.bio {
  width: max-content;
  color: #eee;
  font-size: 1.5rem;
  font-weight: 300;
  margin-bottom: 3rem;
  position: relative;
}

.bio::before,
.bio::after {
  content: '';
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
}

.bio::before {
  background: var(--main-bg);
  animation: typewriter 2.5s steps(24) 500ms forwards;
}

.bio::after {
  margin-left: 0.4rem;
  width: 0.125em;
  background: var(--accent-color);
  animation: typewriter 2.5s steps(24) 500ms forwards,
    blink 750ms steps(24) infinite;
}

@keyframes typewriter {
  to {
    left: 100%;
  }
}

@keyframes blink {
  to {
    background: transparent;
  }
}

.button {
  background: var(--accent-color);
  font-size: 1.25rem;
  padding: 0.5rem 1rem;
  margin-right: 1.5rem;
  color: #eee;
  font-weight: 600;
  border: none;
  cursor: pointer;
}

.outlined {
  font-size: 1.25rem;
  padding: 0.5rem 1rem;
  color: #eee;
  border: 2px solid var(--accent-color);
  background: transparent;
  cursor: pointer;
}

.button:hover,
.outlined:hover {
  box-shadow: 5px 5px 10px rgba(0, 0, 0, 0.5);
}

.illustration {
  height: 500px;
  width: 460px;
}

/* 4K Screens */
@media screen and (min-width: 2000px) {
  .background {
    font-size: 8.5rem;
  }
  .content {
    padding: 0 3rem;
  }
  .name {
    font-size: 6rem;
  }
  .bio {
    font-size: 3rem;
    margin-bottom: 5rem;
  }
  .button {
    font-size: 2rem;
  }
  .outlined {
    font-size: 2rem;
  }
  .illustration {
    height: 900px;
    width: 700px;
  }
}


/* iPad Pro */
@media screen and (max-width: 1100px) {
  .background {
    display: none;
  }
  .container {
    display: block;
  }
  .foreground {
    margin: 4rem 0;
    display: block;
    text-align: center;
  }
  .name {
    font-size: 4rem;
  }
  .bio {
    font-size: 1.75rem;
    margin: 0.75rem auto 3rem;
  }
  .illustration {
    position: absolute;
    bottom: -50px;
    right: 0;
    height: 700px;
    width: 600px;
  }
}

/* iPad */
@media screen and (max-width: 900px) {
  .foreground {
    margin: 2rem 0;
  }
  .name {
    font-size: 3rem;
    margin-bottom: 0.5rem;
  }
  .bio {
    font-size: 1.5rem;
  }
  .illustration {
    height: 550px;
    width: 420px;
    bottom: -50px;
  }
}

@media screen and (orientation: landscape) and (max-width: 1050px) {
  .container {
    display: flex;
  }
  .illustration {
    display: none;
  }
}

/* Phone */
@media screen and (max-width: 600px) {
  .foreground {
    margin: 0;
  }
  .name {
    font-size: 2rem;
  }
  .bio {
    font-size: 1.25rem;
    margin-bottom: 2rem;
  }
  .button {
    font-size: 1rem;
  }
  .outlined {
    font-size: 1rem;
  }
  .illustration {
    position: absolute;
    bottom: 0;
    right: 0;
    width: 75vw;
    height: 50vh;
    z-index: 1;
  }
}


# File: ./src/styles/RepoCard.module.css
.card {
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  background: var(--article-bg);
  border-radius: 5px;
  padding: 1rem;
}

.card:hover {
  box-shadow: 2px 2px 10px rgba(0, 0, 0, 0.3);
}

.card p {
  margin-bottom: 1.25rem;
}

.title {
  color: var(--accent-color);
  margin-bottom: 1rem;
}

.stats {
  display: flex;
  justify-content: space-between;
}

.stats div {
  display: flex;
  align-items: center;
  margin-right: 0.75rem;
}

.stats > div:nth-child(2) {
  margin-right: 0;
}

.icon {
  color: var(--accent-color);
  margin-right: 0.3rem;
}


# File: ./src/styles/Tabsbar.module.css
.tabs {
  display: flex;
  /* flex-wrap: wrap; */
  background: var(--tabs-bg);
  overflow-x: auto;
}

@media screen and (max-width: 900px) {
  .tabs {
    width: 78vw;
  }
}

@media screen and (max-width: 600px) {
  .tabs {
    width: 89.5vw;
  }
}


# File: ./src/styles/themes.css
/* GitHub Dark */
:root {
  --main-bg: #24292e;
  --bg-text: rgba(56, 58, 61, 0.35);
  --text-color: #efefef;
  --accent-color: #f9826c;
  --titlebar-bg: #1f2428;
  --sidebar-bg: #24292e;
  --sidebar-hover-bg: #1f2428;
  --explorer-bg: #1f2428;
  --explorer-hover-bg: #24292e;
  --explorer-border: #161a1d;
  --tabs-bg: #1f2428;
  --tab-bg: #1f2428;
  --tab-active-bg: #24292e;
  --tab-border: #24292e;
  --bottombar-bg: #24292e;
  --bottombar-border: #1b1f23;
  --button-bg: #176f2c;
  --button-text: #dcffe4;
  --bottombar-hover-bg: #4f4f52;
  --scrollbar-track-bg: #24292e;
  --scrollbar-thumb-bg: #333536;
  --article-bg: #1f2428;
}

/* Dracula */
[data-theme='dracula'] {
  --main-bg: #282a36;
  --bg-text: #313340;
  --text-color: #efefef;
  --accent-color: #bd93f9;
  --titlebar-bg: #1e1f29;
  --sidebar-bg: #343746;
  --sidebar-hover-bg: #3c3d51;
  --explorer-bg: #21222c;
  --explorer-hover-bg: #313241;
  --explorer-border: #161a1d;
  --tabs-bg: #191a21;
  --tab-bg: #21222c;
  --tab-active-bg: #282a36;
  --tab-border: #191a21;
  --bottombar-bg: #191a21;
  --bottombar-border: #191a21;
  --button-bg: #44475a;
  --button-text: #f8f8f2;
  --bottombar-hover-bg: #4f4f52;
  --scrollbar-track-bg: #282a36;
  --scrollbar-thumb-bg: #454647;
  --article-bg: #21222c;
}

/* Ayu Dark */
[data-theme='ayu-dark'] {
  --main-bg: #0a0e14;
  --bg-text: #101620;
  --text-color: #efefef;
  --accent-color: #e6b450;
  --titlebar-bg: #1f2428;
  --sidebar-bg: #0a0e14;
  --sidebar-hover-bg: #00010a;
  --explorer-bg: #0a0e14;
  --explorer-hover-bg: #00010a;
  --explorer-border: transparent;
  --tabs-bg: #0a0e14;
  --tab-bg: #0a0e14;
  --tab-active-bg: #0a0e14;
  --tab-border: transparent;
  --bottombar-bg: #0a0e14;
  --bottombar-border: transparent;
  --button-bg: #e6b450;
  --button-text: #0a0e14;
  --bottombar-hover-bg: #4f4f52;
  --scrollbar-track-bg: #0a0e14;
  --scrollbar-thumb-bg: #454647;
  --article-bg: #10121a;
}

/* Ayu Mirage */
[data-theme='ayu-mirage'] {
  --main-bg: #1f2430;
  --bg-text: #21242b;
  --text-color: #efefef;
  --accent-color: #e6b450;
  --titlebar-bg: #1f2428;
  --sidebar-bg: #1f2430;
  --sidebar-hover-bg: #191e2a;
  --explorer-bg: #1f2430;
  --explorer-hover-bg: #191e2a;
  --explorer-border: transparent;
  --tabs-bg: #1f2430;
  --tab-bg: #1f2430;
  --tab-active-bg: #1f2430;
  --tab-border: transparent;
  --bottombar-bg: #1f2430;
  --bottombar-border: transparent;
  --button-bg: #e6b450;
  --button-text: #1f2430;
  --bottombar-hover-bg: #4f4f52;
  --scrollbar-track-bg: #1f2430;
  --scrollbar-thumb-bg: #454647;
  --article-bg: #252e3d;
}

/* Nord */
[data-theme='nord'] {
  --main-bg: #2e3440;
  --bg-text: #3b414d;
  --text-color: #efefef;
  --accent-color: #88c0d0;
  --titlebar-bg: #1f2428;
  --sidebar-bg: #2e3440;
  --sidebar-hover-bg: #434c5e;
  --explorer-bg: #2e3440;
  --explorer-hover-bg: #434c5e;
  --explorer-border: rgba(136, 192, 208, 0.2);
  --tabs-bg: #2e3440;
  --tab-bg: #2e3440;
  --tab-active-bg: #3b4252;
  --tab-border: transparent;
  --bottombar-bg: #3b4252;
  --bottombar-border: transparent;
  --button-bg: #434c5e;
  --button-text: #d8dee9;
  --bottombar-hover-bg: #4f4f52;
  --scrollbar-track-bg: #2e3440;
  --scrollbar-thumb-bg: #454647;
  --article-bg: #363f50;
}

/* Night Owl */
[data-theme='night-owl'] {
  --main-bg: #011627;
  --bg-text: #031d33;
  --text-color: #89a4bb;
  --accent-color: rgb(95, 126, 151);
  --titlebar-bg: #011627;
  --sidebar-bg: #011627;
  --sidebar-hover-bg: #0e293f;
  --explorer-bg: #011627;
  --explorer-hover-bg: #0e293f;
  --explorer-border: transparent;
  --tabs-bg: #011627;
  --tab-bg: #01111d;
  --tab-active-bg: #0b2942;
  --tab-border: rgb(39, 43, 59);
  --bottombar-bg: #011627;
  --bottombar-border: #262a39;
  --button-bg: rgb(95, 126, 151);
  --button-text: #fff;
  --bottombar-hover-bg: #1b222f;
  --scrollbar-track-bg: #011627;
  --scrollbar-thumb-bg: #043254;
  --article-bg: #031d33;
}


# File: ./src/styles/Tab.module.css
.tab {
  padding: 0.5rem 1.25rem;
  background: var(--tab-bg);
  color: #ececec;
  display: flex;
  align-items: center;
  border: 1px solid var(--tab-border);
  font-family: 'Source Sans Pro', sans-serif;
  font-size: 0.9rem;
  cursor: pointer;
}

.tab p {
  margin-left: 5px;
}

.active {
  border-top: 1px solid var(--accent-color);
  background: var(--tab-active-bg);
  border-bottom: none;
}


# File: ./src/styles/SettingsPage.module.css
.container {
  display: grid;
  align-items: center;
  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
  margin: 1rem 0;
}


# File: ./src/styles/ProjectCard.module.css
.card {
  background: var(--article-bg);
  display: flex;
  flex-direction: column;
  border-radius: 20px;
  cursor: pointer;
  transition: box-shadow 0.3s ease;
}

.card:hover {
  box-shadow: 4px 4px 10px rgba(0, 0, 0, 0.1);
}

.content {
  padding: 1rem;
  border-radius: 0 0 20px 20px;
}

.content p {
  font-size: 0.8rem;
  margin-top: 0.5rem;
  line-height: 1.4;
}

.readMore {
  background: none;
  border: none;
  color: var(--accent-color);
  font-size: 0.8rem;
  cursor: pointer;
  padding: 0;
  margin-top: 0.5rem;
}

.readMore:hover {
  text-decoration: underline;
}

.tags {
  display: flex;
  flex-wrap: wrap;
  gap: 0.5rem;
  margin: 1rem 0;
}

.tag {
  padding: 0.2rem 0.8rem;
  border-radius: 20px;
  font-size: 0.75rem;
  transition: all 0.2s;
  background: red; /* Changed to red for filled pills */
  color: white;
  white-space: nowrap;
}


.cta {
  display: flex;
  gap: 1rem;
}

.underline {
  padding: 0.2rem 0;
  font-size: 0.9rem;
  letter-spacing: 0;
  cursor: pointer;
  color: white;
  text-decoration: none;
  background-image: linear-gradient(
    120deg,
    var(--accent-color) 100%,
    var(--accent-color) 100%
  );
  background-repeat: no-repeat;
  background-size: 100% 0.2em;
  background-position: 0 88%;
  transition: background-size 0.25s ease-in;
}

.underline:hover {
  background-size: 100% 88%;
}

# File: ./src/pages/Articles.jsx
// frontend/src/pages/ArticlesPage.jsx
import React, { useEffect, useState } from 'react';
import ArticleCard from '../components/ArticleCard';
import styles from '../styles/ArticlesPage.module.css';

const ArticlesPage = () => {
  const [articles, setArticles] = useState([]);

  useEffect(() => {
    fetch('http://127.0.0.1:8000/api/articles')
      .then((res) => res.json())
      .then((data) => {
        setArticles(data);
      })
      .catch((error) => console.error(error));
  }, []);

  return (
    <div className={styles.page}>
      <h1 className={styles.pageTitle}>Welcome to My Writing Section </h1>

      <div className={styles.articlesGrid}>
        {articles.map((article) => (
          <ArticleCard key={article.id} article={article} />
        ))}
      </div>
    </div>
  );
};

export default ArticlesPage;


# File: ./src/pages/Home.jsx
import React, { useState, useEffect } from 'react';
import { Link } from 'react-router-dom';
import Illustration from '../components/Illustration';
import styles from '../styles/HomePage.module.css';

/**
 * HomePage Component
 */
const HomePage = () => {
  // State to store person data fetched from backend
  const [person, setPerson] = useState(null);

  // State to store which part of the name to highlight in red
  const [highlightIndex, setHighlightIndex] = useState(null);

  // Fetch person data from backend on component mount
  useEffect(() => {
    const fetchPersonData = async () => {
      try {
        const response = await fetch('http://127.0.0.1:8000/api/get_person');
        if (response.ok) {
          const data = await response.json();
          setPerson(data);

          // Split the name into parts and randomly select one to highlight
          const nameParts = data.name.split(' ');
          if (nameParts.length === 3) {
            const randomIndex = Math.floor(Math.random() * 3); // 0, 1, or 2
            setHighlightIndex(randomIndex);
          }
        } else {
          console.error('Failed to fetch person data:', response.statusText);
        }
      } catch (error) {
        console.error('Error fetching person data:', error);
      }
    };

    fetchPersonData();
  }, []);

  // Helper function to remove 'https://www.' from URLs for display
  const formatUrlDisplay = (url = '') => {
    return url.replace(/^https?:\/\/(www\.)?/, '');
  };

  // If person data is not yet loaded, show a loading state
  if (!person) {
    return (
      <div className={styles.container}>
        <div className={styles.foreground}>
          <div className={styles.content}>
            <h1 className={styles.name}>Loading...</h1>
          </div>
        </div>
      </div>
    );
  }

  // Split the name into parts
  const nameParts = person.name.split(' '); // ["Ahmed", "Abdelaziz", "Seif"]

  return (
    <div className={styles.container}>
      <div className={styles.foreground}>
        <div className={styles.content}>
          {/* Render the name with one part highlighted in red */}
          <h1 className={styles.name}>
            {nameParts.map((part, index) => (
              <span key={index} style={index === highlightIndex ? { color: 'red' } : {}}>
                {part} {index < nameParts.length - 1 ? ' ' : ''}
              </span>
            ))}
          </h1>

          {/* Render the title fetched from backend */}
          <h6 className={styles.bio}>{person.title}</h6>

          {/* Optional: Background text can remain as is or be dynamic */}
          <div className={styles.background}>
            {/* You can choose to make this dynamic or keep it static */}
          </div>

          {/* Buttons */}
          <Link to="/projects">
            <button className={styles.button}>Click me to see what I can do</button>
          </Link>
          <Link to="/contact">
            <button className={styles.outlined}>Contact Me</button>
          </Link>
        </div>

        

        {/* Existing Illustration Component */}
        <Illustration className={styles.illustration} />
        {/* Display the image fetched from backend */}
        {person.image && (
          <img
          src={`http://127.0.0.1:8000${person.image}`}
            alt={`${person.name}'s profile`}
            className={styles.profileImage} // Add a new CSS class for styling
          />
        )}
      </div>
    </div>
  );
};

export default HomePage;


# File: ./src/pages/ProjectDetail.jsx
import React, { useEffect, useState } from 'react';
import axios from 'axios';
import styles from '../styles/ProjectDetail.module.css';
import ProjectSkills from '../components/ProjectSkills';
import { useParams } from 'react-router-dom';

const ProjectDetail = () => {
  const { projectName } = useParams();
  const [projectData, setProjectData] = useState(null);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState('');

  useEffect(() => {
    const fetchProject = async () => {
      try {
        setLoading(true);
        const response = await axios.get(
          `http://127.0.0.1:8000/api/projects/${encodeURIComponent(projectName)}`
        );
        setProjectData(response.data.project);
      } catch (err) {
        console.error('Fetch error:', err);
        setError(`Error fetching project data: ${err.response?.data?.message || err.message}`);
      } finally {
        setLoading(false);
      }
    };

    if (projectName) {
      fetchProject();
    } else {
      setError('No project name provided');
      setLoading(false);
    }
  }, [projectName]);

  if (loading) {
    return (
      <div className={styles.loadingContainer}>
        <div className={styles.loadingSpinner}>Loading...</div>
      </div>
    );
  }

  if (error) {
    return <div className={styles.error}>{error}</div>;
  }

  if (!projectData) {
    return <div className={styles.error}>No project data available</div>;
  }

  // Convert escaped HTML from extended_description into real HTML
  const formattedDescription = projectData.extended_description
    ? projectData.extended_description
        .replace(/\\u003C/g, '<')
        .replace(/\\u003E/g, '>')
        .replace(/\\u0026/g, '&')
    : '';

  // Construct the full image URL
  const imageUrl = projectData.image 
    ? `http://127.0.0.1:8000${projectData.image}`
    : null;

  return (
    <div className={`${styles.container} ${styles.vscodeTheme}`}>
      <h1 className={styles.title}>{projectData.name}</h1>

      {imageUrl && (
        <div className={styles.imageContainer}>
          <img
            src={imageUrl}
            alt={projectData.name}
            className={styles.image}
          />
        </div>
      )}

      <div className={styles.content}>
        {/* Render the project description as HTML */}
        <div
          className={styles.extendedDescription}
          dangerouslySetInnerHTML={{ __html: formattedDescription }}
        />

        {/* Skills / Technologies */}
        {projectData.skills && projectData.skills.length > 0 && (
          <div className={styles.skillsSection}>
            <h2>Technologies & Skills</h2>
            <ProjectSkills skills={projectData.skills} />
          </div>
        )}

        {/* Source Code */}
        {projectData.source_code ? (
          <div className={styles.sourceCode}>
            <h2>Source Code</h2>
            <a
              href={projectData.source_code}
              target="_blank"
              rel="noopener noreferrer"
              className={styles.sourceLink}
            >
              View Repository
            </a>
          </div>
        ) : (
          <div className={styles.sourceCode}>
            <h2>Source Code</h2>
            <p>Not available.</p>
          </div>
        )}
      </div>
    </div>
  );
};

export default ProjectDetail;


# File: ./src/pages/ArticleDetail.jsx
// frontend/src/pages/SingleArticlePage.jsx
import React, { useEffect, useState } from 'react';
import { useParams } from 'react-router-dom';
import Prism from 'prismjs';
import 'prismjs/themes/prism.css';
import 'prismjs/components/prism-python';
import 'prismjs/components/prism-javascript';
// Import additional languages as needed
import styles from '../styles/SingleArticlePage.module.css';

const SingleArticlePage = () => {
  const { id } = useParams();
  const [article, setArticle] = useState(null);
  const [language, setLanguage] = useState('en'); // 'en' or 'ar'

  useEffect(() => {
    fetch(`http://127.0.0.1:8000/api/articles/${id}`)
      .then((res) => res.json())
      .then((data) => {
        if (!data.error) {
          setArticle(data);
        } else {
          console.error(data.error);
        }
      })
      .catch((error) => console.error(error));
  }, [id]);

  useEffect(() => {
    Prism.highlightAll();
  }, [article, language]);

  if (!article) {
    return <div className={styles.loading}>Loading...</div>;
  }

  const titleToShow = language === 'en' ? article.name : article.name_ara;
  const descriptionToShow =
    language === 'en' ? article.description : article.description_ara;

  return (
    <div className={styles.container}>
      <div className={styles.articleWrapper}>
        <h1 className={styles.title}>{titleToShow}</h1>
        <span className={styles.date}>{article.created_at}</span>

        {article.image && (
          <img
            src={`http://127.0.0.1:8000${article.image}`}
            alt={article.name}
            className={styles.articleImage}
          />
        )}

        <div className={styles.switchContainer}>
          <button
            onClick={() => setLanguage('en')}
            className={language === 'en' ? styles.switchActive : styles.switchBtn}
          >
            English
          </button>
          <button
            onClick={() => setLanguage('ar')}
            className={language === 'ar' ? styles.switchActive : styles.switchBtn}
          >
            عربي
          </button>
        </div>

        <div
          className={styles.content}
          dangerouslySetInnerHTML={{ __html: descriptionToShow }}
          style={{
            textAlign: language === 'ar' ? 'right' : 'left',
            direction: language === 'ar' ? 'rtl' : 'ltr',
          }}
        />
      </div>
    </div>
  );
};

export default SingleArticlePage;


# File: ./src/pages/About.jsx
import React, { useEffect, useState } from 'react';

const AboutPage = () => {
  const [aboutData, setAboutData] = useState(null);

  useEffect(() => {
    fetch('http://127.0.0.1:8000/api/about')
      .then((response) => response.json())
      .then((data) => setAboutData(data))
      .catch((error) => console.error('Error fetching about data:', error));
  }, []);

  if (!aboutData) {
    return <div className="text-gray-200">Loading...</div>;
  }

  return (
    <div className="min-h-screen bg-gray-900 flex flex-col items-center justify-center p-5">
      <h3 className="text-yellow-300 text-xl font-bold mb-4">A Little Bit About Me</h3>
      <div className="max-w-3xl w-full bg-gray-800 rounded-lg shadow-lg p-6">
        <div className="text-sm md:text-base font-mono text-gray-200 whitespace-pre-wrap break-words"
        >
          <span className="text-green-400">"""</span>
          <span className="text-green-400">{aboutData.title}</span>
          <span className="text-green-400">"""</span>
          <br/>

          <span className="text-blue-400">class</span> <span className="text-yellow-400">Ahmed</span>:<br/>
          
          &nbsp;&nbsp;<span className="text-blue-400">def</span> <span className="text-teal-300">__init__</span>(self):<br/>
          &nbsp;&nbsp;&nbsp;&nbsp;<span className="text-gray-400">self.story</span> = <span className="text-yellow-300">"""<br/>
          <div dangerouslySetInnerHTML={{ __html: aboutData.story }}></div>"""</span><br/>

          &nbsp;&nbsp;<span className="text-blue-400">def</span> <span className="text-blue-400">connect</span>(self):<br/>
          &nbsp;&nbsp;&nbsp;&nbsp;<span className="text-blue-400">return</span> <span className="text-yellow-300">"{aboutData.connect}"</span>
        </div>
      </div>
    </div>
  );
};

export async function getStaticProps() {
  return {
    props: { title: 'About' },
  };
}

export default AboutPage;

# File: ./src/pages/Contact.jsx
import React, { useState, useEffect } from 'react';
import { Terminal } from 'lucide-react';
import Typewriter from 'typewriter-effect';
import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';
import { faPhone, faEnvelope } from '@fortawesome/free-solid-svg-icons';
import { faGithub, faLinkedin } from '@fortawesome/free-brands-svg-icons';

const Contact = () => {
  const [showContactInfo, setShowContactInfo] = useState(false);
  const [formData, setFormData] = useState({
    name: '',
    email: '',
    subject: '',
    message: '',
  });
  const [apiContactInfo, setApiContactInfo] = useState({
    email: '',
    phone_number: '',
    github: '',
    linkedin: '',
  });

  // Fetch contact info from your Django endpoint
  useEffect(() => {
    fetch('http://127.0.0.1:8000/api/get_contact_info')
      .then((res) => res.json())
      .then((data) => {
        setApiContactInfo(data);
      })
      .catch((error) => {
        console.error('Failed to fetch contact info:', error);
      });
  }, []);

  // Helper to remove https://www. from display text
  const formatUrlDisplay = (url = '') => {
    return url.replace(/^https?:\/\/(www\.)?/, '');
  };

  // Contact info array
  // "type" used to decide how to render (mailto, anchor, etc.)
  const contactInfo = [
    {
      type: 'email',
      icon: <FontAwesomeIcon icon={faEnvelope} className="w-4 h-4" />,
      text: apiContactInfo.email, // e.g., 'ahmed.am.seif@gmail.com'
    },
    {
      type: 'phone',
      icon: <FontAwesomeIcon icon={faPhone} className="w-4 h-4" />,
      text: apiContactInfo.phone_number, // e.g., '+201203021321'
    },
    {
      type: 'github',
      icon: <FontAwesomeIcon icon={faGithub} className="w-4 h-4" />,
      text: apiContactInfo.github, // e.g., 'https://www.github.com/AhmedAbdelazizSeif'
    },
    {
      type: 'linkedin',
      icon: <FontAwesomeIcon icon={faLinkedin} className="w-4 h-4" />,
      text: apiContactInfo.linkedin, // e.g., 'https://www.linkedin.com/in/AhmedAbdelazizSeif'
    },
  ];

  const handleChange = (e) => {
    setFormData((prev) => ({ ...prev, [e.target.name]: e.target.value }));
  };

  const handleSubmit = async (e) => {
    e.preventDefault();
    try {
      const res = await fetch('http://127.0.0.1:8000/api/contact', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify(formData),
      });
      if (res.ok) {
        alert('Your response has been received!');
        setFormData({ name: '', email: '', subject: '', message: '' });
      } else {
        alert('Error submitting form.');
      }
    } catch (error) {
      console.error('Failed to submit form:', error);
      alert('Network error.');
    }
  };

  return (
    <div className="min-h-screen bg-gray-900 p-4 md:p-8">
      <div className="max-w-6xl mx-auto grid md:grid-cols-2 gap-8">
        {/* Left: Terminal / Typewriter Section */}
        <div className="bg-black rounded-lg p-6">
          <div className="flex items-center mb-4 text-gray-400">
            <Terminal size={20} className="mr-2" />
            <span>Terminal</span>
          </div>
          <div className="font-mono text-green-400 space-y-2">
            <Typewriter
              onInit={(typewriter) => {
                typewriter
                  .typeString('$ sudo get_contact_info')
                  .pauseFor(1000)
                  .typeString('<br />Permission Allowed')
                  .pauseFor(500)
                  .typeString('<br />Loading contact information...')
                  .pauseFor(1000)
                  .callFunction(() => {
                    setShowContactInfo(true);
                  })
                  .start();
              }}
              options={{
                delay: 50,
                cursor: '',
              }}
            />

            {/* Contact Info Fade-In Section */}
            <div
              className={`space-y-2 mt-4 transition-opacity duration-1000 ${
                showContactInfo ? 'opacity-100' : 'opacity-0'
              }`}
            >
              {contactInfo.map((item, index) => {
                // Decide how to render the text/link based on "type"
                let content;
                if (item.type === 'email' && item.text) {
                  // mailto
                  content = (
                    <a
                      href={`mailto:${item.text}`}
                      className="hover:underline"
                    >
                      {item.text}
                    </a>
                  );
                }
                else if (item.type === 'phone' && item.text) {
                  // phone number, add tel: prefix
                  content = (
                    <a href={`tel:${item.text}`} className="hover:underline">
                      {item.text}
                    </a>
                  );
                }
                else if (
                  (item.type === 'github' || item.type === 'linkedin') &&
                  item.text
                ) {
                  // clickable link, remove https://www. from text
                  content = (
                    <a
                      href={item.text}
                      target="_blank"
                      rel="noopener noreferrer"
                      className="hover:underline"
                    >
                      {formatUrlDisplay(item.text)}
                    </a>
                  );
                } else {
                  // phone or fallback
                  content = <span>{item.text || '—'}</span>;
                }

                return (
                  <div
                    key={index}
                    className="flex items-center space-x-2"
                    style={{
                      animation: showContactInfo
                        ? `fadeIn 0.5s ease-in ${index * 0.2}s forwards`
                        : 'none',
                      opacity: 0,
                    }}
                  >
                    {item.icon}
                    {content}
                  </div>
                );
              })}

              <div
                className="text-center mt-6"
                style={{
                  animation: showContactInfo
                    ? 'fadeIn 0.5s ease-in 1s forwards'
                    : 'none',
                  opacity: 0,
                }}
              >
                <p className="text-red-500 mb-2">More Urgent?</p>
                <a
                  href="https://outlook.office365.com/bookwithme/user/bb73a44faf274216a7b0c41889621221@Atraxia.onmicrosoft.com?anonymous&ep=plink"
                  className="inline-block px-4 py-2 border border-green-400 text-green-400 rounded hover:bg-green-400/10 transition-colors"
                >
                  Book a Meeting
                </a>
              </div>
            </div>

            <p className="text-gray-500 mt-4 animate-pulse">▋</p>
          </div>
        </div>

        {/* Right: Contact Form */}
        <div className="space-y-4">
          <h2 className="text-2xl font-semibold mb-4 text-white">Contact Me</h2>
          <form onSubmit={handleSubmit} className="space-y-4">
            {[
              { label: 'Name', type: 'text', name: 'name' },
              { label: 'Email', type: 'email', name: 'email' },
              { label: 'Subject', type: 'text', name: 'subject' },
            ].map((field) => (
              <div key={field.name}>
                <label className="block mb-1 font-medium text-gray-300">
                  {field.label}
                </label>
                <input
                  type={field.type}
                  name={field.name}
                  value={formData[field.name]}
                  onChange={handleChange}
                  className="w-full p-2 bg-gray-800 border border-gray-700 rounded text-white"
                  required
                />
              </div>
            ))}
            <div>
              <label className="block mb-1 font-medium text-gray-300">
                Message
              </label>
              <textarea
                name="message"
                rows={5}
                value={formData.message}
                onChange={handleChange}
                className="w-full p-2 bg-gray-800 border border-gray-700 rounded text-white"
                required
              />
            </div>
            <button
              type="submit"
              className="bg-blue-600 hover:bg-blue-500 text-white px-6 py-2 rounded font-medium"
            >
              Send Message
            </button>
          </form>
        </div>
      </div>
    </div>
  );
};

export default Contact;


# File: ./src/pages/Settings.jsx
import ThemeInfo from '../components/ThemeInfo';
import styles from '../styles/SettingsPage.module.css';

const SettingsPage = () => {
  return (
    <>
      <h2>Manage Themes</h2>
      <div className={styles.container}>
        <ThemeInfo
          name="GitHub Dark"
          icon="/github-dark.png"
          publisher="GitHub"
          theme="github-dark"
          description="GitHub theme for VS Code"
        />
        <ThemeInfo
          name="Dracula"
          icon="/dracula.png"
          publisher="Dracula Theme"
          theme="dracula"
          description="Official Dracula Theme. A dark theme for many editors, shells, and more."
        />
        <ThemeInfo
          name="Ayu Dark"
          icon="/ayu.png"
          publisher="teabyii"
          theme="ayu-dark"
          description="A simple theme with bright colors."
        />
        <ThemeInfo
          name="Ayu Mirage"
          icon="/ayu.png"
          publisher="teabyii"
          theme="ayu-mirage"
          description="A simple theme with bright colors."
        />
        <ThemeInfo
          name="Nord"
          icon="/nord.png"
          publisher="arcticicestudio"
          theme="nord"
          description="An arctic, north-bluish clean and elegant Visual Studio Code theme."
        />
        <ThemeInfo
          name="Night Owl"
          icon="/night-owl.png"
          publisher="sarah.drasner"
          theme="night-owl"
          description="A VS Code theme for the night owls out there."
        />
      </div>
    </>
  );
};

export async function getStaticProps() {
  return {
    props: { title: 'Settings' },
  };
}

export default SettingsPage;


# File: ./src/pages/Projects.jsx
import React, { useEffect, useState } from 'react';
import ProjectCard from '../components/ProjectCard';

function ProjectsPage() {
  const [projects, setProjects] = useState([]);

  useEffect(() => {
    async function loadProjects() {
      try {
        const res = await fetch('http://127.0.0.1:8000/api/projects');
        if (!res.ok) {
          throw new Error('Failed to fetch projects');
        }
        const data = await res.json();
        setProjects(data);
      } catch (error) {
        console.error(error);
      }
    }
    loadProjects();
  }, []);

  return (
    <div>
      <h3>Stuff I've Built So Far</h3>
      <div style={{ display: 'grid', gridTemplateColumns: '1fr 1fr 1fr', gap: '1rem' }}>
        {projects.map((project) => (
          <ProjectCard key={project.id} project={project} />
        ))}
      </div>
    </div>
  );
}

export default ProjectsPage;


# File: ./src/pages/_app.js
import { useEffect, useState } from "react";
import Layout from "../components/Layout";
import Head from "../components/Head";
import "../styles/globals.css";
import "../styles/themes.css";

function MyApp({ Component, pageProps }) {

  useEffect(() => {
    if (localStorage.getItem("theme")) {
      document.documentElement.setAttribute(
        "data-theme",
        localStorage.getItem("theme")
      );
    }
  }, []);

  return (
    <Layout>
      <Head title={`Ahmed Abdelaziz Seif | ${pageProps.title}`} />
      <Component {...pageProps} />
    </Layout>
  );
}

export default MyApp;


# File: ./src/pages/Index.jsx
import Link from 'next/link';
import Illustration from '../components/Illustration';
import styles from '../styles/HomePage.module.css';

export default function HomePage() {
  return (
    <>
      <div className={styles.container}>
        <div className={styles.background}>
          <h1>I BUILD</h1>
          <h1>WEBSITES</h1>
        </div>
        <div className={styles.foreground}>
          <div className={styles.content}>
            <h1 className={styles.name}>Ahmed Abdelaziz Seif</h1>
            <h6 className={styles.bio}>Full Stack Web Developer</h6>
            <Link href="/projects">
              <button className={styles.button}>View Work</button>
            </Link>
            <Link href="/contact">
              <button className={styles.outlined}>Contact Me</button>
            </Link>
          </div>
          <Illustration className={styles.illustration} />
        </div>
      </div>
    </>
  );
}

export async function getStaticProps() {
  return {
    props: { title: 'Home' },
  };
}


# File: ./src/pages/Github.jsx
// src/pages/GithubPage.jsx
import React, { useEffect, useState } from 'react';
import GitHubCalendar from 'react-github-calendar';
import RepoCard from '../components/RepoCard';
import styles from '../styles/GithubPage.module.css';

const GithubPage = () => {
  const [user, setUser] = useState(null);
  const [repos, setRepos] = useState([]);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState(null);

  // Use an array with exactly 2 or 5 colors
  const theme = {
    dark: [
      '#161B22',
      '#0e4429',
      '#006d32',
      '#26a641',
      '#39d353',
    ],
  };

  useEffect(() => {
    const fetchGitHubData = async () => {
      try {
        const backendURL = 'http://127.0.0.1:8000/api/github';

        // Fetch User Data
        const userRes = await fetch(`${backendURL}/user/`);
        if (!userRes.ok) {
          throw new Error(`Error fetching user data: ${userRes.status} ${userRes.statusText}`);
        }
        const userData = await userRes.json();
        setUser(userData);

        // Fetch Repositories
        const repoRes = await fetch(`${backendURL}/repos/`);
        if (!repoRes.ok) {
          throw new Error(`Error fetching repositories: ${repoRes.status} ${repoRes.statusText}`);
        }
        const repoData = await repoRes.json();
        setRepos(repoData);
      } catch (error) {
        console.error('Failed to fetch GitHub data:', error);
        setError(error.message);
      } finally {
        setLoading(false);
      }
    };

    fetchGitHubData();
  }, []);

  if (loading) {
    return <div>Loading...</div>;
  }

  if (error) {
    return <div>Error: {error}</div>;
  }

  if (!user) {
    return <div>Failed to load user data.</div>;
  }

  return (
    <>
      <div className={styles.user}>
        <div>
          <img
            src={user.avatar_url}
            className={styles.avatar}
            alt={user.login}
            width={50}
            height={50}
          />
          <h3 className={styles.username}>{user.login}</h3>
        </div>
        <div>
          <h3>{user.public_repos} repos</h3>
        </div>
        <div>
          <h3>{user.followers} followers</h3>
        </div>
      </div>
      <div className={styles.container}>
        {repos.map((repo) => (
          <RepoCard key={repo.id} repo={repo} />
        ))}
      </div>
      <div className={styles.contributions}>
        <GitHubCalendar
          username={user.login}
          theme={theme}
          hideColorLegend
          hideMonthLabels
        />
      </div>
    </>
  );
};

export default GithubPage;


# File: ./src/components/Tab.jsx
import React from 'react';
import { Link, useLocation } from 'react-router-dom';
import styles from '../styles/Tab.module.css';

const Tab = ({ icon, filename, path }) => {
  const location = useLocation();

  return (
    <Link to={path}>
      <div
        className={`${styles.tab} ${
          location.pathname === path ? styles.active : ''
        }`}
      >
        <img src={icon} alt={filename} height={18} width={18} />
        <p>{filename}</p>
      </div>
    </Link>
  );
};

export default Tab;


# File: ./src/components/ArticleCard.jsx
// frontend/src/components/ArticleCard.jsx
import React from 'react';
import { Link } from 'react-router-dom';
import styles from '../styles/ArticleCard.module.css';

const ArticleCard = ({ article }) => {
  return (
    <div className={styles.card}>
      {/* If your image path is correct, show it */}
      {article.image && (
        <div className={styles.imageContainer}>
          <img
            src={`http://127.0.0.1:8000${article.image}`}
            alt={article.name}
            className={styles.image}
          />
        </div>
      )}
      <div className={styles.content}>
        <h2 className={styles.title}>{article.name}</h2>
        {/* A short snippet (or maybe truncated) of description */}
        {article.description && (
          <p className={styles.snippet}>
            {article.description.replace(/<[^>]+>/g, '').substring(0, 200)}...
          </p>
        )}

        {/* Link to the Single Article page */}
        <Link to={`/articles/${article.id}`} className={styles.readMore}>
          Read More
        </Link>
      </div>
    </div>
  );
};

export default ArticleCard;


# File: ./src/components/Illustration.jsx
function Illustration(props) {
  return (
    <svg
      width={486}
      height={534}
      viewBox="0 0 486 534"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
      {...props}
    >
      <circle cx={167} cy={60} r={60} fill="#D7F484" />
      <circle cx={37.5} cy={215.5} r={37.5} fill="currentColor" />
      <path
        fillRule="evenodd"
        clipRule="evenodd"
        d="M486 144.469c-38.145-31.86-87.255-51.033-140.842-51.033-121.415 0-219.842 98.427-219.842 219.842 0 14.167 1.34 28.02 3.9 41.441 47.414-86.154 91.678-142.17 146.717-170.767 56.069-29.132 121.816-29.08 210.067-6.68v-32.803zm0 48.288v289.33c-38.145 31.86-87.255 51.033-140.842 51.033-100.321 0-184.947-67.197-211.325-159.037l1.502.805c49.937-93.22 94.046-149.844 147.514-177.625 52.014-27.025 114.411-27.498 203.151-4.506z"
        fill="currentColor"
      />
    </svg>
  );
}

export default Illustration;


# File: ./src/components/Bottombar.jsx
import ErrorIcon from './icons/ErrorIcon';
import WarningIcon from './icons/WarningIcon';
import BellIcon from './icons/BellIcon';
import CheckIcon from './icons/CheckIcon';
import NextjsIcon from './icons/NextjsIcon';
import SourceControlIcon from './icons/SourceControlIcon';
import styles from '../styles/Bottombar.module.css';

const Bottombar = () => {
  return (
    <footer className={styles.bottomBar}>
      <div className={styles.container}>
        <a
          href="https://github.com/AhmedAbdelazizSeif/vscode-portfolio"
          target="_blank"
          rel="noreferrer noopener"
          className={styles.section}
        >
          <SourceControlIcon className={styles.icon} />
          <p>main</p>
        </a>
        <div className={styles.section}>
          <ErrorIcon className={styles.icon} />
          <p className={styles.errorText}>0</p>&nbsp;&nbsp;
          <WarningIcon className={styles.icon} />
          <p>0</p>
        </div>
      </div>
      <div className={styles.container}>
        <div className={styles.section}>
          <NextjsIcon className={styles.icon} />
          <p>Powered by React.JS</p>
        </div>
        <div className={styles.section}>
          <CheckIcon className={styles.icon} />
          <p>Prettier</p>
        </div>
        <div className={styles.section}>
          <BellIcon />
        </div>
      </div>
    </footer>
  );
};

export default Bottombar;


# File: ./src/components/ErrorBoundary.jsx
// src/components/ErrorBoundary.jsx
import React from 'react';

class ErrorBoundary extends React.Component {
  constructor(props) {
    super(props);
    this.state = { hasError: false };
  }

  static getDerivedStateFromError(error) {
    // Update state so the next render shows the fallback UI.
    return { hasError: true };
  }

  componentDidCatch(error, errorInfo) {
    // You can also log the error to an error reporting service
    console.error("ErrorBoundary caught an error", error, errorInfo);
  }

  render() {
    if (this.state.hasError) {
      // You can render any custom fallback UI
      return <h1>Something went wrong.</h1>;
    }

    return this.props.children; 
  }
}

export default ErrorBoundary;


# File: ./src/components/Layout.jsx
import React, { useEffect } from 'react';
import Titlebar from '../components/Titlebar';
import Sidebar from '../components/Sidebar';
import Explorer from '../components/Explorer';
import Bottombar from '../components/Bottombar';
import Tabsbar from './Tabsbar';
import styles from '../styles/Layout.module.css';

const Layout = ({ children }) => {
  // Set scroll to top of main content on mount
  useEffect(() => {
    const main = document.getElementById('main-editor');
    if (main) {
      main.scrollTop = 0;
    }
  }, []); // No dependency, executes only on component mount

  return (
    <>
      <Titlebar />
      <div className={styles.main}>
        <Sidebar />
        <Explorer />
        <div style={{ width: '100%' }}>
          <Tabsbar />
          <main id="main-editor" className={styles.content}>
            {children}
          </main>
        </div>
      </div>
      <Bottombar />
    </>
  );
};

export default Layout;


# File: ./src/components/ProjectCard.jsx
import React, { useMemo } from "react";
import styles from "../styles/ProjectCard.module.css";

const ProjectCard = ({ project }) => {
  const imageUrl = project.image
    ? `http://127.0.0.1:8000${project.image}`
    : "/placeholder.jpg";
  const truncatedDescription =
    project.description.length > 200
      ? `${project.description.slice(0, 200)}...`
      : project.description;

  const renderTags = useMemo(() => {
    let totalLength = 0;
    const visibleTags = [];

    for (const tag of project.tags) {
      if (totalLength + tag.length > 70) break;
      totalLength += tag.length;
      visibleTags.push(tag);
    }

    return (
      <div className={styles.tags}>
        {visibleTags.map((tag) => (
          <span key={tag} className={styles.tag}>
            {tag}
          </span>
        ))}
        {/* If we truncated tags, show an ellipsis */}
        {totalLength < project.tags.join("").length && (
          <span className={styles.tag}>...</span>
        )}
      </div>
    );
  }, [project.tags]);

  // Construct the detail URL: /projects/<hyphenated-name>
  const projectDetailUrl = `/projects/${project.name.replace(/\s+/g, "-")}`;

  return (
    <div className={styles.card}>
      <a href={projectDetailUrl}>
      <img
        style={{ borderRadius: "20px" }}
        src={imageUrl}
        height={300}
        width={600}
        alt={project.name}
      />
      <div className={styles.content}>
        <h3>{project.name}</h3>
        <p>{truncatedDescription}</p>
        
        {/* Only show View Project button if description is truncated */}
        {project.description.length > 200 && (
          <a href={projectDetailUrl} className={styles.readMore}>
            View Project
          </a>
        )}

        {renderTags}

        <div className={styles.cta}>
          {/* Link to the actual source code URL */}
          {project.source_code && (
            <a
              href={project.source_code}
              target="_blank"
              rel="noopener noreferrer"
              className={styles.underline}
            >
              Source Code
            </a>
          )}
          
          {/* Demo link */}
          {project.demo && (
            <a
              href={project.demo}
              target="_blank"
              rel="noopener noreferrer"
              className={styles.underline}
            >
              Live Demo
            </a>
          )}
        </div>
      </div>
      </a>
    </div>
  );
};

export default ProjectCard;


# File: ./src/components/ContactCode.jsx
import styles from '../styles/ContactCode.module.css';

const contactItems = [
  {
    social: 'website',
    link: 'nitinranganath.me',
    href: 'https://nitinranganath.me',
  },
  {
    social: 'email',
    link: 'nitinranganath@gmail.com',
    href: 'mailto:nitinranganath@gmail.com',
  },
  {
    social: 'github',
    link: 'itsnitinr',
    href: 'https://github.com/itsnitinr',
  },
  {
    social: 'linkedin',
    link: 'nitinranganath',
    href: 'https://www.linkedin.com/in/nitinranganath/',
  },
  {
    social: 'twitter',
    link: 'iamnitinr',
    href: 'https://www.twitter.com/iamnitinr',
  },
  {
    social: 'instagram',
    link: 'iamnitinr',
    href: 'https://www.instagram.com/iamnitinr',
  },
  {
    social: 'polywork',
    link: 'nitinranganath',
    href: 'https://www.polywork.com/nitinranganath',
  },
  {
    social: 'telegram',
    link: 'iamnitinr',
    href: 'https://t.me/iamnitinr',
  },
  {
    social: 'codepen',
    link: 'nitinranganath',
    href: 'https://codepen.io/itsnitinr',
  },
  {
    social: 'codesandbox',
    link: 'itsnitinr',
    href: 'https://codesandbox.io/u/itsnitinr',
  },
];

const ContactCode = () => {
  return (
    <div className={styles.code}>
      <p className={styles.line}>
        <span className={styles.className}>.socials</span> &#123;
      </p>
      {contactItems.slice(0, 8).map((item, index) => (
        <p className={styles.line} key={index}>
          &nbsp;&nbsp;&nbsp;{item.social}:{' '}
          <a href={item.href} target="_blank" rel="noopener">
            {item.link}
          </a>
          ;
        </p>
      ))}
      {contactItems.slice(8, contactItems.length).map((item, index) => (
        <p className={styles.line} key={index}>
          &nbsp;&nbsp;{item.social}:{' '}
          <a href={item.href} target="_blank" rel="noopener">
            {item.link}
          </a>
          ;
        </p>
      ))}
      <p className={styles.line}>&#125;</p>
    </div>
  );
};

export default ContactCode;


# File: ./src/components/RepoCard.jsx
import WatchIcon from '../components/icons/WatchIcon';
import ForkIcon from '../components/icons/ForkIcon';
import StarIcon from '../components/icons/StarIcon';
import GithubIcon from '../components/icons/GithubIcon';
import LinkIcon from '../components/icons/LinkIcon';
import styles from '../styles/RepoCard.module.css';

const RepoCard = ({ repo }) => {
  return (
    <div className={styles.card}>
      <div>
        <h3 className={styles.title}>{repo.name}</h3>
        <p>{repo.description}</p>
      </div>
      <div className={styles.stats}>
        <div>
          <div>
            <WatchIcon className={styles.icon} /> {repo.watchers}
          </div>
          <div>
            <ForkIcon className={styles.icon} /> {repo.forks}
          </div>
          <div>
            <StarIcon className={styles.icon} /> {repo.stargazers_count}
          </div>
        </div>
        <div>
          <a href={repo.html_url} target="_blank" rel="noopener noreferrer">
            <GithubIcon height={20} width={20} className={styles.icon} />
          </a>
          {repo.homepage && (
            <a href={repo.homepage} target="_blank" rel="noopener noreferrer">
              <LinkIcon height={20} width={20} className={styles.icon} />
            </a>
          )}
        </div>
      </div>
    </div>
  );
};

export default RepoCard;


# File: ./src/components/ThemeInfo.jsx
import React from 'react';
import styles from '../styles/ThemeInfo.module.css';

const ThemeInfo = ({ icon, name, publisher, theme }) => {
  const setTheme = (theme) => {
    document.documentElement.setAttribute('data-theme', theme);
    localStorage.setItem('theme', theme);
  };

  return (
    <div className={styles.container}>
      <img src={icon} alt={name} height={100} width={100} />
      <div className={styles.info}>
        <div>
          <h3>{name}</h3>
          <h5>{publisher}</h5>
        </div>
        <button onClick={() => setTheme(theme)}>Set Color Theme</button>
      </div>
    </div>
  );
};

export default ThemeInfo;


# File: ./src/components/Sidebar.jsx
import { NavLink } from 'react-router-dom';
import FilesIcon from './icons/FilesIcon';
import GithubIcon from './icons/GithubIcon';
import CodeIcon from './icons/CodeIcon';
import PencilIcon from './icons/PencilIcon';
import MailIcon from './icons/MailIcon';
import AccountIcon from './icons/AccountIcon';
import SettingsIcon from './icons/SettingsIcon';
import styles from '../styles/Sidebar.module.css';

const sidebarTopItems = [
  {
    Icon: FilesIcon,
    path: '/',
  },
  {
    Icon: GithubIcon,
    path: '/github',
  },
  {
    Icon: CodeIcon,
    path: '/projects',
  },
  {
    Icon: PencilIcon,
    path: '/articles',
  },
  {
    Icon: MailIcon,
    path: '/contact',
  },
];

const sidebarBottomItems = [
  {
    Icon: AccountIcon,
    path: '/about',
  },
  {
    Icon: SettingsIcon,
    path: '/settings',
  },
];

const Sidebar = () => {
  return (
    <aside className={styles.sidebar}>
      <div className={styles.sidebarTop}>
        {sidebarTopItems.map(({ Icon, path }) => (
          <NavLink
            to={path}
            key={path}
            className={({ isActive }) =>
              `${styles.iconContainer} ${isActive ? styles.active : ''}`
            }
          >
            <Icon
              fill={({ isActive }) =>
                isActive ? 'rgb(225, 228, 232)' : 'rgb(106, 115, 125)'
              }
              className={styles.icon}
            />
          </NavLink>
        ))}
      </div>
      <div className={styles.sidebarBottom}>
        {sidebarBottomItems.map(({ Icon, path }) => (
          <NavLink
            to={path}
            key={path}
            className={({ isActive }) =>
              `${styles.iconContainer} ${isActive ? styles.active : ''}`
            }
          >
            <Icon
              fill={({ isActive }) =>
                isActive ? 'rgb(225, 228, 232)' : 'rgb(106, 115, 125)'
              }
              className={styles.icon}
            />
          </NavLink>
        ))}
      </div>
    </aside>
  );
};

export default Sidebar;


# File: ./src/components/Head.jsx
import Head from 'next/head';

const CustomHead = ({ title }) => {
  return (
    <Head>
      <title>{title}</title>
      <meta
        name="description"
        content="Ahmed Abdelaziz Seif is an avid full stack web developer building websites and applications you'd love to use"
      />
      <meta
        name="keywords"
        content="Ahmed Abdelaziz Seif, nitin, ranganath, web developer portfolio, nitin web developer, nitin developer, mern stack, Ahmed Abdelaziz Seif portfolio, vscode-portfolio"
      />
      <meta property="og:title" content="Ahmed Abdelaziz Seif's Portfolio" />
      <meta
        property="og:description"
        content="A full-stack developer building websites that you'd like to use."
      />
      <meta property="og:image" content="https://imgur.com/4zi5KkQ.png" />
      <meta property="og:url" content="https://vscode-portfolio.vercel.app" />
      <meta name="twitter:card" content="summary_large_image" />
    </Head>
  );
};

export default CustomHead;

CustomHead.defaultProps = {
  title: 'Ahmed Abdelaziz Seif',
};


# File: ./src/components/Tabsbar.jsx
import Tab from './Tab';
import styles from '../styles/Tabsbar.module.css';

const Tabsbar = () => {
  return (
    <div className={styles.tabs}>
      <Tab icon="/markdown_icon.svg" filename="home.md" path="/" />
      <Tab icon="/python.svg" filename="about.py" path="/about" />
      <Tab icon="/bash.svg" filename="contact.sh" path="/contact" />
      <Tab icon="/js_icon.svg" filename="projects.js" path="/projects" />
      <Tab icon="/json_icon.svg" filename="articles.json" path="/articles" />
      <Tab icon="/markdown_icon.svg" filename="github.md" path="/github" />
    </div>
  );
};

export default Tabsbar;


# File: ./src/components/Explorer.jsx
import React, { useState } from 'react';
import { Link } from 'react-router-dom';
import ChevronRight from '../components/icons/ChevronRight';
import styles from '../styles/Explorer.module.css';

const explorerItems = [
  {
    name: 'home.md',
    path: '/',
    icon: 'markdown_icon.svg',
  },
  {
    name: 'about.py',
    path: '/about',
    icon: 'python.svg',
  },
  {
    name: 'contact.sh',
    path: '/contact',
    icon: 'bash.svg',
  },
  {
    name: 'projects.js',
    path: '/projects',
    icon: 'js_icon.svg',
  },
  {
    name: 'articles.json',
    path: '/articles',
    icon: 'json_icon.svg',
  },
  {
    name: 'github.md',
    path: '/github',
    icon: 'markdown_icon.svg',
  },
];

const Explorer = () => {
  const [portfolioOpen, setPortfolioOpen] = useState(true);

  return (
    <div className={styles.explorer}>
      <p className={styles.title}>Explorer</p>
      <div>
        <input
          type="checkbox"
          className={styles.checkbox}
          id="portfolio-checkbox"
          checked={portfolioOpen}
          onChange={() => setPortfolioOpen(!portfolioOpen)}
        />
        <label htmlFor="portfolio-checkbox" className={styles.heading}>
          <ChevronRight
            className={styles.chevron}
            style={portfolioOpen ? { transform: 'rotate(90deg)' } : {}}
          />
          Portfolio
        </label>
        <div
          className={styles.files}
          style={portfolioOpen ? { display: 'block' } : { display: 'none' }}
        >
          {explorerItems.map((item) => (
            <Link to={item.path} key={item.name}>
              <div className={styles.file}>
                <img
                  src={`/${item.icon}`}
                  alt={item.name}
                  height={18}
                  width={18}
                />
                <p>{item.name}</p>
              </div>
            </Link>
          ))}
        </div>
      </div>
    </div>
  );
};

export default Explorer;


# File: ./src/components/Titlebar.jsx
import React from 'react';
import styles from '../styles/Titlebar.module.css';

const Titlebar = () => {
  return (
    <section className={styles.titlebar}>
      <img
        src="/vscode_icon.svg"
        alt="VSCode Icon"
        height={15}
        width={15}
        className={styles.icon}
      />
      <div className={styles.items}>
        <p>File</p>
        <p>Edit</p>
        <p>View</p>
        <p>Go</p>
        <p>Run</p>
        <p>Terminal</p>
        <p>Help</p>
      </div>
      <p className={styles.title}>Ahmed Abdelaziz Seif - Visual Studio Code</p>
      <div className={styles.windowButtons}>
        <span className={styles.minimize}></span>
        <span className={styles.maximize}></span>
        <span className={styles.close}></span>
      </div>
    </section>
  );
};

export default Titlebar;


# File: ./src/components/ProjectSkills.jsx
import React from 'react';

const ProjectSkills = ({ skills }) => {
  return (
    <div className="mb-6">
      <h2 className="text-blue-400 text-xl font-semibold mb-2">Skills / Tags</h2>
      <div className="flex flex-wrap gap-2">
        {skills.map((skill, index) => (
          <span
            key={index}
            className="
              bg-gray-800
              border border-gray-700
              text-gray-300 
              px-2 py-1 
              rounded 
              hover:bg-gray-700
              transition-colors
            "
          >
            {skill}
          </span>
        ))}
      </div>
    </div>
  );
};

export default ProjectSkills;


# File: ./src/components/icons/NextjsIcon.jsx
const NextjsIcon = (props) => {
  return (
    <svg
      width={14}
      fill="currentColor"
      viewBox="0 0 24 24"
      xmlns="http://www.w3.org/2000/svg"
      {...props}
    >
      <path d="M14.23 12.004a2.236 2.236 0 0 1-2.235 2.236 2.236 2.236 0 0 1-2.236-2.236 2.236 2.236 0 0 1 2.235-2.236 2.236 2.236 0 0 1 2.236 2.236zm2.648-10.69c-1.346 0-3.107.96-4.888 2.622-1.78-1.653-3.542-2.602-4.887-2.602-.41 0-.783.093-1.106.278-1.375.793-1.683 3.264-.973 6.365C1.98 8.917 0 10.42 0 12.004c0 1.59 1.99 3.097 5.043 4.03-.704 3.113-.39 5.588.988 6.38.32.187.69.275 1.102.275 1.345 0 3.107-.96 4.888-2.624 1.78 1.654 3.542 2.603 4.887 2.603.41 0 .783-.09 1.106-.275 1.374-.792 1.683-3.263.973-6.365C22.02 15.096 24 13.59 24 12.004c0-1.59-1.99-3.097-5.043-4.032.704-3.11.39-5.587-.988-6.38-.318-.184-.688-.277-1.092-.277zm-.005 1.09v.006c.225 0 .406.044.558.127.666.382.955 1.835.73 3.704-.054.46-.142.945-.25 1.44-.96-.236-2.006-.417-3.107-.534-.66-.905-1.345-1.727-2.035-2.447 1.592-1.48 3.087-2.292 4.105-2.295zm-9.77.02c1.012 0 2.514.808 4.11 2.28-.686.72-1.37 1.537-2.02 2.442-1.107.117-2.154.298-3.113.538-.112-.49-.195-.964-.254-1.42-.23-1.868.054-3.32.714-3.707.19-.09.4-.127.563-.132zm4.882 3.05c.455.468.91.992 1.36 1.564-.44-.02-.89-.034-1.345-.034-.46 0-.915.01-1.36.034.44-.572.895-1.096 1.345-1.565zM12 8.1c.74 0 1.477.034 2.202.093.406.582.802 1.203 1.183 1.86.372.64.71 1.29 1.018 1.946-.308.655-.646 1.31-1.013 1.95-.38.66-.773 1.288-1.18 1.87-.728.063-1.466.098-2.21.098-.74 0-1.477-.035-2.202-.093-.406-.582-.802-1.204-1.183-1.86-.372-.64-.71-1.29-1.018-1.946.303-.657.646-1.313 1.013-1.954.38-.66.773-1.286 1.18-1.868.728-.064 1.466-.098 2.21-.098zm-3.635.254c-.24.377-.48.763-.704 1.16-.225.39-.435.782-.635 1.174-.265-.656-.49-1.31-.676-1.947.64-.15 1.315-.283 2.015-.386zm7.26 0c.695.103 1.365.23 2.006.387-.18.632-.405 1.282-.66 1.933-.2-.39-.41-.783-.64-1.174-.225-.392-.465-.774-.705-1.146zm3.063.675c.484.15.944.317 1.375.498 1.732.74 2.852 1.708 2.852 2.476-.005.768-1.125 1.74-2.857 2.475-.42.18-.88.342-1.355.493-.28-.958-.646-1.956-1.1-2.98.45-1.017.81-2.01 1.085-2.964zm-13.395.004c.278.96.645 1.957 1.1 2.98-.45 1.017-.812 2.01-1.086 2.964-.484-.15-.944-.318-1.37-.5-1.732-.737-2.852-1.706-2.852-2.474 0-.768 1.12-1.742 2.852-2.476.42-.18.88-.342 1.356-.494zm11.678 4.28c.265.657.49 1.312.676 1.948-.64.157-1.316.29-2.016.39.24-.375.48-.762.705-1.158.225-.39.435-.788.635-1.18zm-9.945.02c.2.392.41.783.64 1.175.23.39.465.772.705 1.143-.695-.102-1.365-.23-2.006-.386.18-.63.406-1.282.66-1.933zM17.92 16.32c.112.493.2.968.254 1.423.23 1.868-.054 3.32-.714 3.708-.147.09-.338.128-.563.128-1.012 0-2.514-.807-4.11-2.28.686-.72 1.37-1.536 2.02-2.44 1.107-.118 2.154-.3 3.113-.54zm-11.83.01c.96.234 2.006.415 3.107.532.66.905 1.345 1.727 2.035 2.446-1.595 1.483-3.092 2.295-4.11 2.295-.22-.005-.406-.05-.553-.132-.666-.38-.955-1.834-.73-3.703.054-.46.142-.944.25-1.438zm4.56.64c.44.02.89.034 1.345.034.46 0 .915-.01 1.36-.034-.44.572-.895 1.095-1.345 1.565-.455-.47-.91-.993-1.36-1.565z" />
    </svg>
  );
};

export default NextjsIcon;

# File: ./src/components/icons/ChevronRight.jsx
const ChevronRight = (props) => {
  return (
    <svg
      width={16}
      height={16}
      viewBox="0 0 16 16"
      xmlns="http://www.w3.org/2000/svg"
      fill="currentColor"
      {...props}
    >
      <path
        fillRule="evenodd"
        clipRule="evenodd"
        d="M10.072 8.024L5.715 3.667l.618-.62L11 7.716v.618L6.333 13l-.618-.619 4.357-4.357z"
      />
    </svg>
  );
};

export default ChevronRight;


# File: ./src/components/icons/ForkIcon.jsx
const ForkIcon = (props) => {
  return (
    <svg
      aria-hidden="true"
      viewBox="0 0 16 16"
      data-view-component="true"
      height={16}
      width={16}
      {...props}
    >
      <path
        fillRule="evenodd"
        fill="currentColor"
        d="M5 3.25a.75.75 0 11-1.5 0 .75.75 0 011.5 0zm0 2.122a2.25 2.25 0 10-1.5 0v.878A2.25 2.25 0 005.75 8.5h1.5v2.128a2.251 2.251 0 101.5 0V8.5h1.5a2.25 2.25 0 002.25-2.25v-.878a2.25 2.25 0 10-1.5 0v.878a.75.75 0 01-.75.75h-4.5A.75.75 0 015 6.25v-.878zm3.75 7.378a.75.75 0 11-1.5 0 .75.75 0 011.5 0zm3-8.75a.75.75 0 100-1.5.75.75 0 000 1.5z"
      />
    </svg>
  );
};

export default ForkIcon;


# File: ./src/components/icons/PencilIcon.jsx
const PencilIcon = (props) => {
  return (
    <svg
      width={16}
      height={16}
      viewBox="0 0 16 16"
      xmlns="http://www.w3.org/2000/svg"
      fill="currentColor"
      {...props}
    >
      <path d="M13.23 1h-1.46L3.52 9.25l-.16.22L1 13.59 2.41 15l4.12-2.36.22-.16L15 4.23V2.77L13.23 1zM2.41 13.59l1.51-3 1.45 1.45-2.96 1.55zm3.83-2.06L4.47 9.76l8-8 1.77 1.77-8 8z" />
    </svg>
  );
};

export default PencilIcon;


# File: ./src/components/icons/CodeIcon.jsx
const CodeIcon = (props) => {
  return (
    <svg
      width={16}
      height={16}
      viewBox="0 0 16 16"
      xmlns="http://www.w3.org/2000/svg"
      fill="currentColor"
      {...props}
    >
      <path d="M4.708 5.578L2.061 8.224l2.647 2.646-.708.708-3-3V7.87l3-3 .708.708zm7-.708L11 5.578l2.647 2.646L11 10.87l.708.708 3-3V7.87l-3-3zM4.908 13l.894.448 5-10L9.908 3l-5 10z" />
    </svg>
  );
};

export default CodeIcon;


# File: ./src/components/icons/FilesIcon.jsx
const FilesIcon = (props) => {
  return (
    <svg
      width={24}
      height={24}
      viewBox="0 0 24 24"
      xmlns="http://www.w3.org/2000/svg"
      fill="currentColor"
      {...props}
    >
      <path d="M17.5 0h-9L7 1.5V6H2.5L1 7.5v15.07L2.5 24h12.07L16 22.57V18h4.7l1.3-1.43V4.5L17.5 0zm0 2.12l2.38 2.38H17.5V2.12zm-3 20.38h-12v-15H7v9.07L8.5 18h6v4.5zm6-6h-12v-15H16V6h4.5v10.5z" />
    </svg>
  );
};

export default FilesIcon;


# File: ./src/components/icons/MailIcon.jsx
const MailIcon = (props) => {
  return (
    <svg
      width={16}
      height={16}
      viewBox="0 0 16 16"
      xmlns="http://www.w3.org/2000/svg"
      fill="currentColor"
      {...props}
    >
      <path
        fillRule="evenodd"
        clipRule="evenodd"
        d="M1 3.5l.5-.5h13l.5.5v9l-.5.5h-13l-.5-.5v-9zm1 1.035V12h12V4.536L8.31 8.9H7.7L2 4.535zM13.03 4H2.97L8 7.869 13.03 4z"
      />
    </svg>
  );
};

export default MailIcon;


# File: ./src/components/icons/CommentIcon.jsx
const CommentIcon = (props) => {
  return (
    <svg
      fill="currentColor"
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 512 512"
      {...props}
    >
      <path d="M162.133 204.8h51.2c4.71 0 8.533-3.823 8.533-8.533s-3.823-8.533-8.533-8.533h-51.2c-4.71 0-8.533 3.823-8.533 8.533s3.823 8.533 8.533 8.533zM401.067 187.733h-153.6c-4.71 0-8.533 3.823-8.533 8.533s3.823 8.533 8.533 8.533h153.6c4.71 0 8.533-3.823 8.533-8.533s-3.823-8.533-8.533-8.533zM375.467 247.467A8.536 8.536 0 00384 256h34.133c4.71 0 8.533-3.823 8.533-8.533s-3.823-8.533-8.533-8.533H384c-4.71-.001-8.533 3.822-8.533 8.533zM162.133 256h85.333c4.71 0 8.533-3.823 8.533-8.533s-3.823-8.533-8.533-8.533h-85.333c-4.71 0-8.533 3.823-8.533 8.533s3.823 8.533 8.533 8.533z" />
      <path d="M42.667 324.267c-14.114 0-25.6-11.486-25.6-25.6v-256c0-14.114 11.486-25.6 25.6-25.6h358.4c14.114 0 25.6 11.486 25.6 25.6V76.8c0 4.71 3.823 8.533 8.533 8.533s8.533-3.823 8.533-8.533V42.667C443.733 19.14 424.593 0 401.067 0h-358.4C19.14 0 0 19.14 0 42.667v256c0 23.526 19.14 42.667 42.667 42.667a8.536 8.536 0 008.533-8.533c0-4.711-3.823-8.534-8.533-8.534zM315.733 307.2h85.333c4.71 0 8.533-3.823 8.533-8.533s-3.823-8.533-8.533-8.533h-85.333c-4.71 0-8.533 3.823-8.533 8.533s3.823 8.533 8.533 8.533z" />
      <path d="M469.333 102.4h-358.4c-23.526 0-42.667 19.14-42.667 42.667v256c0 23.526 19.14 42.667 42.667 42.667h213.333c4.71 0 8.533-3.823 8.533-8.533s-3.823-8.533-8.533-8.533H110.933c-14.114 0-25.6-11.486-25.6-25.6v-256c0-14.114 11.486-25.6 25.6-25.6h358.4c14.114 0 25.6 11.486 25.6 25.6v256c0 14.114-11.486 25.6-25.6 25.6H435.2a8.536 8.536 0 00-8.533 8.533v47.667L355.9 412.1a8.523 8.523 0 00-12.066 0 8.523 8.523 0 000 12.066l85.333 85.333a8.535 8.535 0 009.301 1.852 8.547 8.547 0 005.265-7.885v-59.733h25.6c23.526 0 42.667-19.14 42.667-42.667v-256c0-23.526-19.14-42.666-42.667-42.666z" />
      <path d="M162.133 307.2H281.6c4.71 0 8.533-3.823 8.533-8.533s-3.823-8.533-8.533-8.533H162.133c-4.71 0-8.533 3.823-8.533 8.533s3.823 8.533 8.533 8.533zM332.8 358.4h85.333c4.71 0 8.533-3.823 8.533-8.533s-3.823-8.533-8.533-8.533H332.8c-4.71 0-8.533 3.823-8.533 8.533s3.823 8.533 8.533 8.533zM358.4 247.467a8.536 8.536 0 00-8.533-8.533H281.6c-4.71 0-8.533 3.823-8.533 8.533S276.89 256 281.6 256h68.267a8.536 8.536 0 008.533-8.533zM162.133 358.4h136.533c4.71 0 8.533-3.823 8.533-8.533s-3.823-8.533-8.533-8.533H162.133c-4.71 0-8.533 3.823-8.533 8.533s3.823 8.533 8.533 8.533z" />
    </svg>
  );
};

export default CommentIcon;


# File: ./src/components/icons/WarningIcon.jsx
const WarningIcon = (props) => {
  return (
    <svg
      width={14}
      height={14}
      viewBox="0 0 16 16"
      xmlns="http://www.w3.org/2000/svg"
      fill="currentColor"
      {...props}
    >
      <path
        fillRule="evenodd"
        clipRule="evenodd"
        d="M7.56 1h.88l6.54 12.26-.44.74H1.44L1 13.26 7.56 1zM8 2.28L2.28 13H13.7L8 2.28zM8.625 12v-1h-1.25v1h1.25zm-1.25-2V6h1.25v4h-1.25z"
      />
    </svg>
  );
};

export default WarningIcon;


# File: ./src/components/icons/BellIcon.jsx
const BellIcon = (props) => {
  return (
    <svg
      width={14}
      height={14}
      viewBox="0 0 16 16"
      xmlns="http://www.w3.org/2000/svg"
      fill="currentColor"
      {...props}
    >
      <path d="M13.377 10.573a7.63 7.63 0 01-.383-2.38V6.195a5.115 5.115 0 00-1.268-3.446 5.138 5.138 0 00-3.242-1.722c-.694-.072-1.4 0-2.07.227-.67.215-1.28.574-1.794 1.053a4.923 4.923 0 00-1.208 1.675 5.067 5.067 0 00-.431 2.022v2.2a7.61 7.61 0 01-.383 2.37L2 12.343l.479.658h3.505c0 .526.215 1.04.586 1.412.37.37.885.586 1.412.586.526 0 1.04-.215 1.411-.586s.587-.886.587-1.412h3.505l.478-.658-.586-1.77zm-4.69 3.147a.997.997 0 01-.705.299.997.997 0 01-.706-.3.997.997 0 01-.3-.705h1.999a.939.939 0 01-.287.706zm-5.515-1.71l.371-1.114a8.633 8.633 0 00.443-2.691V6.004c0-.563.12-1.113.347-1.616.227-.514.55-.969.969-1.34.419-.382.91-.67 1.436-.837.538-.18 1.1-.24 1.65-.18a4.147 4.147 0 012.597 1.4 4.133 4.133 0 011.004 2.776v2.01c0 .909.144 1.818.443 2.691l.371 1.113h-9.63v-.012z" />
    </svg>
  );
};

export default BellIcon;


# File: ./src/components/icons/StarIcon.jsx
const StarIcon = (props) => {
  return (
    <svg
      aria-hidden="true"
      viewBox="0 0 16 16"
      data-view-component="true"
      height={16}
      width={16}
      {...props}
    >
      <path
        fillRule="evenodd"
        fill="currentColor"
        d="M8 .25a.75.75 0 01.673.418l1.882 3.815 4.21.612a.75.75 0 01.416 1.279l-3.046 2.97.719 4.192a.75.75 0 01-1.088.791L8 12.347l-3.766 1.98a.75.75 0 01-1.088-.79l.72-4.194L.818 6.374a.75.75 0 01.416-1.28l4.21-.611L7.327.668A.75.75 0 018 .25zm0 2.445L6.615 5.5a.75.75 0 01-.564.41l-3.097.45 2.24 2.184a.75.75 0 01.216.664l-.528 3.084 2.769-1.456a.75.75 0 01.698 0l2.77 1.456-.53-3.084a.75.75 0 01.216-.664l2.24-2.183-3.096-.45a.75.75 0 01-.564-.41L8 2.694v.001z"
      />
    </svg>
  );
};

export default StarIcon;


# File: ./src/components/icons/SourceControlIcon.jsx
const SourceControlIcon = (props) => {
  return (
    <svg
      width={14}
      fill="currentColor"
      viewBox="0 0 24 24"
      xmlns="http://www.w3.org/2000/svg"
      {...props}
    >
      <path d="M21.007 8.222A3.738 3.738 0 0 0 15.045 5.2a3.737 3.737 0 0 0 1.156 6.583 2.988 2.988 0 0 1-2.668 1.67h-2.99a4.456 4.456 0 0 0-2.989 1.165V7.4a3.737 3.737 0 1 0-1.494 0v9.117a3.776 3.776 0 1 0 1.816.099 2.99 2.99 0 0 1 2.668-1.667h2.99a4.484 4.484 0 0 0 4.223-3.039 3.736 3.736 0 0 0 3.25-3.687zM4.565 3.738a2.242 2.242 0 1 1 4.484 0 2.242 2.242 0 0 1-4.484 0zm4.484 16.441a2.242 2.242 0 1 1-4.484 0 2.242 2.242 0 0 1 4.484 0zm8.221-9.715a2.242 2.242 0 1 1 0-4.485 2.242 2.242 0 0 1 0 4.485z" />
    </svg>
  );
};

export default SourceControlIcon;


# File: ./src/components/icons/WatchIcon.jsx
const WatchIcon = (props) => {
  return (
    <svg
      aria-hidden="true"
      viewBox="0 0 16 16"
      data-view-component="true"
      height={16}
      width={16}
      {...props}
    >
      <path
        fillRule="evenodd"
        fill="currentColor"
        d="M1.679 7.932c.412-.621 1.242-1.75 2.366-2.717C5.175 4.242 6.527 3.5 8 3.5c1.473 0 2.824.742 3.955 1.715 1.124.967 1.954 2.096 2.366 2.717a.119.119 0 010 .136c-.412.621-1.242 1.75-2.366 2.717C10.825 11.758 9.473 12.5 8 12.5c-1.473 0-2.824-.742-3.955-1.715C2.92 9.818 2.09 8.69 1.679 8.068a.119.119 0 010-.136zM8 2c-1.981 0-3.67.992-4.933 2.078C1.797 5.169.88 6.423.43 7.1a1.619 1.619 0 000 1.798c.45.678 1.367 1.932 2.637 3.024C4.329 13.008 6.019 14 8 14c1.981 0 3.67-.992 4.933-2.078 1.27-1.091 2.187-2.345 2.637-3.023a1.619 1.619 0 000-1.798c-.45-.678-1.367-1.932-2.637-3.023C11.671 2.992 9.981 2 8 2zm0 8a2 2 0 100-4 2 2 0 000 4z"
      />
    </svg>
  );
};

export default WatchIcon;


# File: ./src/components/icons/ErrorIcon.jsx
const ErrorIcon = (props) => {
  return (
    <svg
      width={14}
      height={14}
      viewBox="0 0 16 16"
      xmlns="http://www.w3.org/2000/svg"
      fill="currentColor"
      {...props}
    >
      <path
        fillRule="evenodd"
        clipRule="evenodd"
        d="M8.6 1c1.6.1 3.1.9 4.2 2 1.3 1.4 2 3.1 2 5.1 0 1.6-.6 3.1-1.6 4.4-1 1.2-2.4 2.1-4 2.4-1.6.3-3.2.1-4.6-.7-1.4-.8-2.5-2-3.1-3.5C.9 9.2.8 7.5 1.3 6c.5-1.6 1.4-2.9 2.8-3.8C5.4 1.3 7 .9 8.6 1zm.5 12.9c1.3-.3 2.5-1 3.4-2.1.8-1.1 1.3-2.4 1.2-3.8 0-1.6-.6-3.2-1.7-4.3-1-1-2.2-1.6-3.6-1.7-1.3-.1-2.7.2-3.8 1-1.1.8-1.9 1.9-2.3 3.3-.4 1.3-.4 2.7.2 4 .6 1.3 1.5 2.3 2.7 3 1.2.7 2.6.9 3.9.6zM7.9 7.5L10.3 5l.7.7-2.4 2.5 2.4 2.5-.7.7-2.4-2.5-2.4 2.5-.7-.7 2.4-2.5-2.4-2.5.7-.7 2.4 2.5z"
      />
    </svg>
  );
};

export default ErrorIcon;


# File: ./src/components/icons/AccountIcon.jsx
const AccountIcon = (props) => {
  return (
    <svg
      width={16}
      height={16}
      viewBox="0 0 16 16"
      xmlns="http://www.w3.org/2000/svg"
      fill="currentColor"
      {...props}
    >
      <path d="M16 7.992C16 3.58 12.416 0 8 0S0 3.58 0 7.992c0 2.43 1.104 4.62 2.832 6.09.016.016.032.016.032.032.144.112.288.224.448.336.08.048.144.111.224.175A7.98 7.98 0 008.016 16a7.98 7.98 0 004.48-1.375c.08-.048.144-.111.224-.16.144-.111.304-.223.448-.335.016-.016.032-.016.032-.032 1.696-1.487 2.8-3.676 2.8-6.106zm-8 7.001c-1.504 0-2.88-.48-4.016-1.279.016-.128.048-.255.08-.383a4.17 4.17 0 01.416-.991c.176-.304.384-.576.64-.816.24-.24.528-.463.816-.639.304-.176.624-.304.976-.4A4.15 4.15 0 018 10.342a4.185 4.185 0 012.928 1.166c.368.368.656.8.864 1.295.112.288.192.592.24.911A7.03 7.03 0 018 14.993zm-2.448-7.4a2.49 2.49 0 01-.208-1.024c0-.351.064-.703.208-1.023.144-.32.336-.607.576-.847.24-.24.528-.431.848-.575.32-.144.672-.208 1.024-.208.368 0 .704.064 1.024.208.32.144.608.336.848.575.24.24.432.528.576.847.144.32.208.672.208 1.023 0 .368-.064.704-.208 1.023a2.84 2.84 0 01-.576.848 2.84 2.84 0 01-.848.575 2.715 2.715 0 01-2.064 0 2.84 2.84 0 01-.848-.575 2.526 2.526 0 01-.56-.848zm7.424 5.306c0-.032-.016-.048-.016-.08a5.22 5.22 0 00-.688-1.406 4.883 4.883 0 00-1.088-1.135 5.207 5.207 0 00-1.04-.608 2.82 2.82 0 00.464-.383 4.2 4.2 0 00.624-.784 3.624 3.624 0 00.528-1.934 3.71 3.71 0 00-.288-1.47 3.799 3.799 0 00-.816-1.199 3.845 3.845 0 00-1.2-.8 3.72 3.72 0 00-1.472-.287 3.72 3.72 0 00-1.472.288 3.631 3.631 0 00-1.2.815 3.84 3.84 0 00-.8 1.199 3.71 3.71 0 00-.288 1.47c0 .352.048.688.144 1.007.096.336.224.64.4.927.16.288.384.544.624.784.144.144.304.271.48.383a5.12 5.12 0 00-1.04.624c-.416.32-.784.703-1.088 1.119a4.999 4.999 0 00-.688 1.406c-.016.032-.016.064-.016.08C1.776 11.636.992 9.91.992 7.992.992 4.14 4.144.991 8 .991s7.008 3.149 7.008 7.001a6.96 6.96 0 01-2.032 4.907z" />
    </svg>
  );
};

export default AccountIcon;


# File: ./src/components/icons/EyeIcon.jsx
const EyeIcon = (props) => {
  return (
    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512" {...props}>
      <g fill="currentColor">
        <path d="M34 256l26.2 26.2c108 108 283.7 108 391.7 0L478 256l-26.2-26.2c-108-108-283.7-108-391.7 0L34 256zm222 126.2c-75.8 0-151.6-28.9-209.3-86.6l-32.9-32.9c-3.7-3.7-3.7-9.7 0-13.5l32.9-32.9c115.4-115.4 303.2-115.4 418.6 0l32.9 32.9c3.7 3.7 3.7 9.7 0 13.5l-32.9 32.9c-57.7 57.7-133.5 86.6-209.3 86.6z" />
        <path d="M256 183.5c-40 0-72.5 32.5-72.5 72.5s32.5 72.5 72.5 72.5 72.5-32.5 72.5-72.5-32.5-72.5-72.5-72.5zm0 164c-50.5 0-91.5-41.1-91.5-91.5 0-50.5 41.1-91.5 91.5-91.5s91.5 41.1 91.5 91.5c0 50.5-41 91.5-91.5 91.5z" />
      </g>
    </svg>
  );
};

export default EyeIcon;


# File: ./src/components/icons/CheckIcon.jsx
const CheckIcon = (props) => {
  return (
    <svg
      width={16}
      height={16}
      xmlns="http://www.w3.org/2000/svg"
      fill="currentColor"
      {...props}
    >
      <path
        fillRule="evenodd"
        clipRule="evenodd"
        d="M15.62 3.596 7.815 12.81l-.728-.033L4 8.382l.754-.53 2.744 3.907L14.917 3l.703.596z"
      />
      <path
        fillRule="evenodd"
        clipRule="evenodd"
        d="m7.234 8.774 4.386-5.178L10.917 3l-4.23 4.994.547.78zm-1.55.403.548.78-.547-.78zm-1.617 1.91.547.78-.799.943-.728-.033L0 8.382l.754-.53 2.744 3.907.57-.672z"
      />
    </svg>
  );
};

export default CheckIcon;


# File: ./src/components/icons/LinkIcon.jsx
const LinkIcon = (props) => {
  return (
    <svg
      aria-hidden="true"
      viewBox="0 0 16 16"
      data-view-component="true"
      height={16}
      width={16}
      {...props}
    >
      <path
        fillRule="evenodd"
        fill="currentColor"
        d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"
      />
    </svg>
  );
};

export default LinkIcon;


# File: ./src/components/icons/HeartIcon.jsx
const HeartIcon = (props) => {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 490.4 490.4"
      fill="currentColor"
      {...props}
    >
      <path d="M222.5 453.7c6.1 6.1 14.3 9.5 22.9 9.5 8.5 0 16.9-3.5 22.9-9.5L448 274c27.3-27.3 42.3-63.6 42.4-102.1 0-38.6-15-74.9-42.3-102.2S384.6 27.4 346 27.4c-37.9 0-73.6 14.5-100.7 40.9-27.2-26.5-63-41.1-101-41.1-38.5 0-74.7 15-102 42.2C15 96.7 0 133 0 171.6c0 38.5 15.1 74.8 42.4 102.1l180.1 180zM59.7 86.8c22.6-22.6 52.7-35.1 84.7-35.1s62.2 12.5 84.9 35.2l7.4 7.4c2.3 2.3 5.4 3.6 8.7 3.6 3.2 0 6.4-1.3 8.7-3.6l7.2-7.2c22.7-22.7 52.8-35.2 84.9-35.2 32 0 62.1 12.5 84.7 35.1 22.7 22.7 35.1 52.8 35.1 84.8s-12.5 62.1-35.2 84.8L251 436.4c-2.9 2.9-8.2 2.9-11.2 0l-180-180c-22.7-22.7-35.2-52.8-35.2-84.8s12.5-62.1 35.1-84.8z" />
    </svg>
  );
};

export default HeartIcon;


# File: ./src/components/icons/GithubIcon.jsx
const GithubIcon = (props) => {
  return (
    <svg
      width={24}
      height={24}
      viewBox="0 0 24 24"
      xmlns="http://www.w3.org/2000/svg"
      fill="currentColor"
      {...props}
    >
      <path d="M21.035 5.257c.91 1.092 1.364 2.366 1.364 3.822 0 5.277-3.002 6.824-5.823 7.279.364.637.455 1.365.455 2.093v3.73c0 .455-.273.728-.637.728a.718.718 0 01-.728-.728v-3.73a2.497 2.497 0 00-.728-2.093l.455-1.183c2.821-.364 5.733-1.274 5.733-6.187 0-1.183-.455-2.275-1.274-3.185l-.182-.727a4.04 4.04 0 00.09-2.73c-.454.09-1.364.273-2.91 1.365l-.547.09a13.307 13.307 0 00-6.55 0l-.547-.09C7.57 2.71 6.66 2.437 6.204 2.437c-.273.91-.273 1.91.09 2.73l-.181.727c-.91.91-1.365 2.093-1.365 3.185 0 4.822 2.73 5.823 5.732 6.187l.364 1.183c-.546.546-.819 1.274-.728 2.002v3.821a.718.718 0 01-.728.728.718.718 0 01-.728-.728V20.18c-3.002.637-4.185-.91-5.095-2.092-.455-.546-.819-1.001-1.274-1.092-.09-.091-.364-.455-.273-.819.091-.364.455-.637.82-.455.91.182 1.455.91 2 1.547.82 1.092 1.639 2.092 4.095 1.547v-.364c-.09-.728.091-1.456.455-2.093-2.73-.546-5.914-2.093-5.914-7.279 0-1.456.455-2.73 1.365-3.822-.273-1.273-.182-2.638.273-3.73l.455-.364C5.749 1.073 7.023.8 9.66 2.437a13.673 13.673 0 016.642 0C18.851.708 20.216.98 20.398 1.072l.455.364c.455 1.274.546 2.548.182 3.821z" />
    </svg>
  );
};

export default GithubIcon;


# File: ./src/components/icons/SettingsIcon.jsx
const SettingsIcon = (props) => {
  return (
    <svg
      width={24}
      height={24}
      viewBox="0 0 24 24"
      xmlns="http://www.w3.org/2000/svg"
      fill="currentColor"
      {...props}
    >
      <path
        fillRule="evenodd"
        clipRule="evenodd"
        d="M19.85 8.75l4.15.83v4.84l-4.15.83 2.35 3.52-3.43 3.43-3.52-2.35-.83 4.15H9.58l-.83-4.15-3.52 2.35-3.43-3.43 2.35-3.52L0 14.42V9.58l4.15-.83L1.8 5.23 5.23 1.8l3.52 2.35L9.58 0h4.84l.83 4.15 3.52-2.35 3.43 3.43-2.35 3.52zm-1.57 5.07l4-.81v-2l-4-.81-.54-1.3 2.29-3.43-1.43-1.43-3.43 2.29-1.3-.54-.81-4h-2l-.81 4-1.3.54-3.43-2.29-1.43 1.43L6.38 8.9l-.54 1.3-4 .81v2l4 .81.54 1.3-2.29 3.43 1.43 1.43 3.43-2.29 1.3.54.81 4h2l.81-4 1.3-.54 3.43 2.29 1.43-1.43-2.29-3.43.54-1.3zm-8.186-4.672A3.43 3.43 0 0112 8.57 3.44 3.44 0 0115.43 12a3.43 3.43 0 11-5.336-2.852zm.956 4.274c.281.188.612.288.95.288A1.7 1.7 0 0013.71 12a1.71 1.71 0 10-2.66 1.422z"
      />
    </svg>
  );
};

export default SettingsIcon;


# File: ./src/assets/react.svg
<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" role="img" class="iconify iconify--logos" width="35.93" height="32" preserveAspectRatio="xMidYMid meet" viewBox="0 0 256 228"><path fill="#00D8FF" d="M210.483 73.824a171.49 171.49 0 0 0-8.24-2.597c.465-1.9.893-3.777 1.273-5.621c6.238-30.281 2.16-54.676-11.769-62.708c-13.355-7.7-35.196.329-57.254 19.526a171.23 171.23 0 0 0-6.375 5.848a155.866 155.866 0 0 0-4.241-3.917C100.759 3.829 77.587-4.822 63.673 3.233C50.33 10.957 46.379 33.89 51.995 62.588a170.974 170.974 0 0 0 1.892 8.48c-3.28.932-6.445 1.924-9.474 2.98C17.309 83.498 0 98.307 0 113.668c0 15.865 18.582 31.778 46.812 41.427a145.52 145.52 0 0 0 6.921 2.165a167.467 167.467 0 0 0-2.01 9.138c-5.354 28.2-1.173 50.591 12.134 58.266c13.744 7.926 36.812-.22 59.273-19.855a145.567 145.567 0 0 0 5.342-4.923a168.064 168.064 0 0 0 6.92 6.314c21.758 18.722 43.246 26.282 56.54 18.586c13.731-7.949 18.194-32.003 12.4-61.268a145.016 145.016 0 0 0-1.535-6.842c1.62-.48 3.21-.974 4.76-1.488c29.348-9.723 48.443-25.443 48.443-41.52c0-15.417-17.868-30.326-45.517-39.844Zm-6.365 70.984c-1.4.463-2.836.91-4.3 1.345c-3.24-10.257-7.612-21.163-12.963-32.432c5.106-11 9.31-21.767 12.459-31.957c2.619.758 5.16 1.557 7.61 2.4c23.69 8.156 38.14 20.213 38.14 29.504c0 9.896-15.606 22.743-40.946 31.14Zm-10.514 20.834c2.562 12.94 2.927 24.64 1.23 33.787c-1.524 8.219-4.59 13.698-8.382 15.893c-8.067 4.67-25.32-1.4-43.927-17.412a156.726 156.726 0 0 1-6.437-5.87c7.214-7.889 14.423-17.06 21.459-27.246c12.376-1.098 24.068-2.894 34.671-5.345a134.17 134.17 0 0 1 1.386 6.193ZM87.276 214.515c-7.882 2.783-14.16 2.863-17.955.675c-8.075-4.657-11.432-22.636-6.853-46.752a156.923 156.923 0 0 1 1.869-8.499c10.486 2.32 22.093 3.988 34.498 4.994c7.084 9.967 14.501 19.128 21.976 27.15a134.668 134.668 0 0 1-4.877 4.492c-9.933 8.682-19.886 14.842-28.658 17.94ZM50.35 144.747c-12.483-4.267-22.792-9.812-29.858-15.863c-6.35-5.437-9.555-10.836-9.555-15.216c0-9.322 13.897-21.212 37.076-29.293c2.813-.98 5.757-1.905 8.812-2.773c3.204 10.42 7.406 21.315 12.477 32.332c-5.137 11.18-9.399 22.249-12.634 32.792a134.718 134.718 0 0 1-6.318-1.979Zm12.378-84.26c-4.811-24.587-1.616-43.134 6.425-47.789c8.564-4.958 27.502 2.111 47.463 19.835a144.318 144.318 0 0 1 3.841 3.545c-7.438 7.987-14.787 17.08-21.808 26.988c-12.04 1.116-23.565 2.908-34.161 5.309a160.342 160.342 0 0 1-1.76-7.887Zm110.427 27.268a347.8 347.8 0 0 0-7.785-12.803c8.168 1.033 15.994 2.404 23.343 4.08c-2.206 7.072-4.956 14.465-8.193 22.045a381.151 381.151 0 0 0-7.365-13.322Zm-45.032-43.861c5.044 5.465 10.096 11.566 15.065 18.186a322.04 322.04 0 0 0-30.257-.006c4.974-6.559 10.069-12.652 15.192-18.18ZM82.802 87.83a323.167 323.167 0 0 0-7.227 13.238c-3.184-7.553-5.909-14.98-8.134-22.152c7.304-1.634 15.093-2.97 23.209-3.984a321.524 321.524 0 0 0-7.848 12.897Zm8.081 65.352c-8.385-.936-16.291-2.203-23.593-3.793c2.26-7.3 5.045-14.885 8.298-22.6a321.187 321.187 0 0 0 7.257 13.246c2.594 4.48 5.28 8.868 8.038 13.147Zm37.542 31.03c-5.184-5.592-10.354-11.779-15.403-18.433c4.902.192 9.899.29 14.978.29c5.218 0 10.376-.117 15.453-.343c-4.985 6.774-10.018 12.97-15.028 18.486Zm52.198-57.817c3.422 7.8 6.306 15.345 8.596 22.52c-7.422 1.694-15.436 3.058-23.88 4.071a382.417 382.417 0 0 0 7.859-13.026a347.403 347.403 0 0 0 7.425-13.565Zm-16.898 8.101a358.557 358.557 0 0 1-12.281 19.815a329.4 329.4 0 0 1-23.444.823c-7.967 0-15.716-.248-23.178-.732a310.202 310.202 0 0 1-12.513-19.846h.001a307.41 307.41 0 0 1-10.923-20.627a310.278 310.278 0 0 1 10.89-20.637l-.001.001a307.318 307.318 0 0 1 12.413-19.761c7.613-.576 15.42-.876 23.31-.876H128c7.926 0 15.743.303 23.354.883a329.357 329.357 0 0 1 12.335 19.695a358.489 358.489 0 0 1 11.036 20.54a329.472 329.472 0 0 1-11 20.722Zm22.56-122.124c8.572 4.944 11.906 24.881 6.52 51.026c-.344 1.668-.73 3.367-1.15 5.09c-10.622-2.452-22.155-4.275-34.23-5.408c-7.034-10.017-14.323-19.124-21.64-27.008a160.789 160.789 0 0 1 5.888-5.4c18.9-16.447 36.564-22.941 44.612-18.3ZM128 90.808c12.625 0 22.86 10.235 22.86 22.86s-10.235 22.86-22.86 22.86s-22.86-10.235-22.86-22.86s10.235-22.86 22.86-22.86Z"></path></svg>

# File: ./public/markdown_icon.svg
<svg version="1.1" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
<path d="m2.25 15.75v-8h2l3 3 3-3h2v8h-2v-5.17l-3 3-3-3v5.17h-2m14-8h3v4h2.5l-4 4.5-4-4.5h2.5z" fill="#42a5f5"/>
</svg>


# File: ./public/vercel.svg
<svg width="283" height="64" viewBox="0 0 283 64" fill="none" 
    xmlns="http://www.w3.org/2000/svg">
    <path d="M141.04 16c-11.04 0-19 7.2-19 18s8.96 18 20 18c6.67 0 12.55-2.64 16.19-7.09l-7.65-4.42c-2.02 2.21-5.09 3.5-8.54 3.5-4.79 0-8.86-2.5-10.37-6.5h28.02c.22-1.12.35-2.28.35-3.5 0-10.79-7.96-17.99-19-17.99zm-9.46 14.5c1.25-3.99 4.67-6.5 9.45-6.5 4.79 0 8.21 2.51 9.45 6.5h-18.9zM248.72 16c-11.04 0-19 7.2-19 18s8.96 18 20 18c6.67 0 12.55-2.64 16.19-7.09l-7.65-4.42c-2.02 2.21-5.09 3.5-8.54 3.5-4.79 0-8.86-2.5-10.37-6.5h28.02c.22-1.12.35-2.28.35-3.5 0-10.79-7.96-17.99-19-17.99zm-9.45 14.5c1.25-3.99 4.67-6.5 9.45-6.5 4.79 0 8.21 2.51 9.45 6.5h-18.9zM200.24 34c0 6 3.92 10 10 10 4.12 0 7.21-1.87 8.8-4.92l7.68 4.43c-3.18 5.3-9.14 8.49-16.48 8.49-11.05 0-19-7.2-19-18s7.96-18 19-18c7.34 0 13.29 3.19 16.48 8.49l-7.68 4.43c-1.59-3.05-4.68-4.92-8.8-4.92-6.07 0-10 4-10 10zm82.48-29v46h-9V5h9zM36.95 0L73.9 64H0L36.95 0zm92.38 5l-27.71 48L73.91 5H84.3l17.32 30 17.32-30h10.39zm58.91 12v9.69c-1-.29-2.06-.49-3.2-.49-5.81 0-10 4-10 10V51h-9V17h9v9.2c0-5.08 5.91-9.2 13.2-9.2z" fill="#000"/>
</svg>

# File: ./public/python.svg
<svg xmlns="http://www.w3.org/2000/svg" width="2500" height="2490" preserveAspectRatio="xMinYMin meet" viewBox="0 0 256 255" id="python">
  <defs>
    <linearGradient id="a" x1="12.959%" x2="79.639%" y1="12.039%" y2="78.201%">
      <stop offset="0%" stop-color="#387EB8"></stop>
      <stop offset="100%" stop-color="#366994"></stop>
    </linearGradient>
    <linearGradient id="b" x1="19.128%" x2="90.742%" y1="20.579%" y2="88.429%">
      <stop offset="0%" stop-color="#FFE052"></stop>
      <stop offset="100%" stop-color="#FFC331"></stop>
    </linearGradient>
  </defs>
  <path fill="url(#a)" d="M126.916.072c-64.832 0-60.784 28.115-60.784 28.115l.072 29.128h61.868v8.745H41.631S.145 61.355.145 126.77c0 65.417 36.21 63.097 36.21 63.097h21.61v-30.356s-1.165-36.21 35.632-36.21h61.362s34.475.557 34.475-33.319V33.97S194.67.072 126.916.072zM92.802 19.66a11.12 11.12 0 0 1 11.13 11.13 11.12 11.12 0 0 1-11.13 11.13 11.12 11.12 0 0 1-11.13-11.13 11.12 11.12 0 0 1 11.13-11.13z"></path>
  <path fill="url(#b)" d="M128.757 254.126c64.832 0 60.784-28.115 60.784-28.115l-.072-29.127H127.6v-8.745h86.441s41.486 4.705 41.486-60.712c0-65.416-36.21-63.096-36.21-63.096h-21.61v30.355s1.165 36.21-35.632 36.21h-61.362s-34.475-.557-34.475 33.32v56.013s-5.235 33.897 62.518 33.897zm34.114-19.586a11.12 11.12 0 0 1-11.13-11.13 11.12 11.12 0 0 1 11.13-11.131 11.12 11.12 0 0 1 11.13 11.13 11.12 11.12 0 0 1-11.13 11.13z"></path>
</svg>


# File: ./public/bash.svg
<?xml version="1.0" encoding="utf-8"?>
<!-- Generator: Adobe Illustrator 22.0.0, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->
<svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
	 viewBox="0 0 150 150" style="enable-background:new 0 0 150 150;" xml:space="preserve">
<style type="text/css">
	.st0{fill:#FFFFFF;}
</style>
<g>
	<path class="st0" d="M118.9,40.3L81.7,18.2c-2.2-1.3-4.7-2-7.2-2s-5,0.7-7.2,2L30.1,40.3c-4.4,2.6-7.2,7.5-7.2,12.8v44.2
		c0,5.3,2.7,10.1,7.2,12.8l37.2,22.1c2.2,1.3,4.7,2,7.2,2c2.5,0,5-0.7,7.2-2l37.2-22.1c4.4-2.6,7.2-7.5,7.2-12.8V53
		C126.1,47.8,123.4,42.9,118.9,40.3z M90.1,109.3l0.1,3.2c0,0.4-0.2,0.8-0.5,1l-1.9,1.1c-0.3,0.2-0.5,0-0.6-0.4l0-3.1
		c-1.6,0.7-3.2,0.8-4.3,0.4c-0.2-0.1-0.3-0.4-0.2-0.7l0.7-2.9c0.1-0.2,0.2-0.5,0.3-0.6c0.1-0.1,0.1-0.1,0.2-0.1
		c0.1-0.1,0.2-0.1,0.3,0c1.1,0.4,2.6,0.2,3.9-0.5c1.8-0.9,2.9-2.7,2.9-4.5c0-1.6-0.9-2.3-3-2.3c-2.7,0-5.2-0.5-5.3-4.5
		c0-3.3,1.7-6.7,4.4-8.8l0-3.2c0-0.4,0.2-0.8,0.5-1l1.8-1.2c0.3-0.2,0.5,0,0.6,0.4l0,3.2c1.3-0.5,2.5-0.7,3.6-0.4
		c0.2,0.1,0.3,0.4,0.2,0.7l-0.7,2.8c-0.1,0.2-0.2,0.4-0.3,0.6c-0.1,0.1-0.1,0.1-0.2,0.1c-0.1,0-0.2,0.1-0.3,0
		c-0.5-0.1-1.6-0.4-3.4,0.6c-1.9,1-2.6,2.6-2.5,3.8c0,1.5,0.8,1.9,3.3,1.9c3.4,0.1,4.9,1.6,5,5C94.7,103.4,92.9,107,90.1,109.3z
		 M109.6,103.9c0,0.3,0,0.6-0.3,0.7l-9.4,5.7c-0.2,0.1-0.4,0-0.4-0.3v-2.4c0-0.3,0.2-0.5,0.4-0.6l9.3-5.5c0.2-0.1,0.4,0,0.4,0.3
		V103.9z M116.1,49.6L80.9,71.3c-4.4,2.6-7.6,5.4-7.6,10.7v43.4c0,3.2,1.3,5.2,3.2,5.8c-0.6,0.1-1.3,0.2-2,0.2
		c-2.1,0-4.1-0.6-5.9-1.6l-37.2-22.1c-3.6-2.2-5.9-6.2-5.9-10.5V53c0-4.3,2.3-8.4,5.9-10.5l37.2-22.1c1.8-1.1,3.8-1.6,5.9-1.6
		s4.1,0.6,5.9,1.6l37.2,22.1c3.1,1.8,5.1,5,5.7,8.5C122.1,48.4,119.3,47.7,116.1,49.6z"/>
</g>
</svg>



# File: ./public/md.svg
<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
        "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg t="1649126639901" class="icon" viewBox="0 0 1280 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="2240"
     width="50" height="40">
    <defs>
        <style type="text/css">@font-face { font-family: feedback-iconfont; src:
            url("//at.alicdn.com/t/font_1031158_u69w8yhxdu.woff2?t=1630033759944") format("woff2"),
            url("//at.alicdn.com/t/font_1031158_u69w8yhxdu.woff?t=1630033759944") format("woff"),
            url("//at.alicdn.com/t/font_1031158_u69w8yhxdu.ttf?t=1630033759944") format("truetype"); }
        </style>
    </defs>
    <path d="M1187.6 118.2H92.4C41.4 118.2 0 159.6 0 210.4v603c0 51 41.4 92.4 92.4 92.4h1095.4c51 0 92.4-41.4 92.2-92.2V210.4c0-50.8-41.4-92.2-92.4-92.2zM677 721.2H554v-240l-123 153.8-123-153.8v240H184.6V302.8h123l123 153.8 123-153.8h123v418.4z m270.6 6.2L763 512H886V302.8h123V512H1132z"
          p-id="2241" fill="#1296db"></path>
</svg>


# File: ./public/night-owl.png
# File: ./public/nord.png
# File: ./public/vscode_icon.svg
<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 256 256" fill="none">
<mask id="mask0" mask-type="alpha" maskUnits="userSpaceOnUse" x="0" y="0" width="256" height="256">
<path fill-rule="evenodd" clip-rule="evenodd" d="M181.534 254.252C185.566 255.823 190.164 255.722 194.234 253.764L246.94 228.403C252.478 225.738 256 220.132 256 213.983V42.0181C256 35.8689 252.478 30.2638 246.94 27.5988L194.234 2.23681C188.893 -0.333132 182.642 0.296344 177.955 3.70418C177.285 4.191 176.647 4.73454 176.049 5.33354L75.149 97.3862L31.1992 64.0247C27.1079 60.9191 21.3853 61.1735 17.5855 64.63L3.48936 77.4525C-1.15853 81.6805 -1.16386 88.9926 3.47785 93.2274L41.5926 128L3.47785 162.773C-1.16386 167.008 -1.15853 174.32 3.48936 178.548L17.5855 191.37C21.3853 194.827 27.1079 195.081 31.1992 191.976L75.149 158.614L176.049 250.667C177.645 252.264 179.519 253.467 181.534 254.252ZM192.039 69.8853L115.479 128L192.039 186.115V69.8853Z" fill="white"/>
</mask>
<g mask="url(#mask0)">
<path d="M246.94 27.6383L194.193 2.24138C188.088 -0.698302 180.791 0.541721 175.999 5.33332L3.32371 162.773C-1.32082 167.008 -1.31548 174.32 3.33523 178.548L17.4399 191.37C21.2421 194.827 26.9682 195.081 31.0619 191.976L239.003 34.2269C245.979 28.9347 255.999 33.9103 255.999 42.6667V42.0543C255.999 35.9078 252.478 30.3047 246.94 27.6383Z" fill="#0065A9"/>
<g filter="url(#filter0_d)">
<path d="M246.94 228.362L194.193 253.759C188.088 256.698 180.791 255.458 175.999 250.667L3.32371 93.2272C-1.32082 88.9925 -1.31548 81.6802 3.33523 77.4523L17.4399 64.6298C21.2421 61.1733 26.9682 60.9188 31.0619 64.0245L239.003 221.773C245.979 227.065 255.999 222.09 255.999 213.333V213.946C255.999 220.092 252.478 225.695 246.94 228.362Z" fill="#007ACC"/>
</g>
<g filter="url(#filter1_d)">
<path d="M194.196 253.763C188.089 256.7 180.792 255.459 176 250.667C181.904 256.571 192 252.389 192 244.039V11.9606C192 3.61057 181.904 -0.571175 176 5.33321C180.792 0.541166 188.089 -0.700607 194.196 2.23648L246.934 27.5985C252.476 30.2635 256 35.8686 256 42.0178V213.983C256 220.132 252.476 225.737 246.934 228.402L194.196 253.763Z" fill="#1F9CF0"/>
</g>
<g style="mix-blend-mode:overlay" opacity="0.25">
<path fill-rule="evenodd" clip-rule="evenodd" d="M181.378 254.252C185.41 255.822 190.008 255.722 194.077 253.764L246.783 228.402C252.322 225.737 255.844 220.132 255.844 213.983V42.0179C255.844 35.8687 252.322 30.2636 246.784 27.5986L194.077 2.23665C188.737 -0.333299 182.486 0.296177 177.798 3.70401C177.129 4.19083 176.491 4.73437 175.892 5.33337L74.9927 97.386L31.0429 64.0245C26.9517 60.9189 21.229 61.1734 17.4292 64.6298L3.33311 77.4523C-1.31478 81.6803 -1.32011 88.9925 3.3216 93.2273L41.4364 128L3.3216 162.773C-1.32011 167.008 -1.31478 174.32 3.33311 178.548L17.4292 191.37C21.229 194.827 26.9517 195.081 31.0429 191.976L74.9927 158.614L175.892 250.667C177.488 252.264 179.363 253.467 181.378 254.252ZM191.883 69.8851L115.323 128L191.883 186.115V69.8851Z" fill="url(#paint0_linear)"/>
</g>
</g>
<defs>
<filter id="filter0_d" x="-21.4896" y="40.5225" width="298.822" height="236.149" filterUnits="userSpaceOnUse" color-interpolation-filters="sRGB">
<feFlood flood-opacity="0" result="BackgroundImageFix"/>
<feColorMatrix in="SourceAlpha" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0"/>
<feOffset/>
<feGaussianBlur stdDeviation="10.6667"/>
<feColorMatrix type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.25 0"/>
<feBlend mode="overlay" in2="BackgroundImageFix" result="effect1_dropShadow"/>
<feBlend mode="normal" in="SourceGraphic" in2="effect1_dropShadow" result="shape"/>
</filter>
<filter id="filter1_d" x="154.667" y="-20.6735" width="122.667" height="297.347" filterUnits="userSpaceOnUse" color-interpolation-filters="sRGB">
<feFlood flood-opacity="0" result="BackgroundImageFix"/>
<feColorMatrix in="SourceAlpha" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0"/>
<feOffset/>
<feGaussianBlur stdDeviation="10.6667"/>
<feColorMatrix type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.25 0"/>
<feBlend mode="overlay" in2="BackgroundImageFix" result="effect1_dropShadow"/>
<feBlend mode="normal" in="SourceGraphic" in2="effect1_dropShadow" result="shape"/>
</filter>
<linearGradient id="paint0_linear" x1="127.844" y1="0.659988" x2="127.844" y2="255.34" gradientUnits="userSpaceOnUse">
<stop stop-color="white"/>
<stop offset="1" stop-color="white" stop-opacity="0"/>
</linearGradient>
</defs>
</svg>

# File: ./public/vite.svg
<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" role="img" class="iconify iconify--logos" width="31.88" height="32" preserveAspectRatio="xMidYMid meet" viewBox="0 0 256 257"><defs><linearGradient id="IconifyId1813088fe1fbc01fb466" x1="-.828%" x2="57.636%" y1="7.652%" y2="78.411%"><stop offset="0%" stop-color="#41D1FF"></stop><stop offset="100%" stop-color="#BD34FE"></stop></linearGradient><linearGradient id="IconifyId1813088fe1fbc01fb467" x1="43.376%" x2="50.316%" y1="2.242%" y2="89.03%"><stop offset="0%" stop-color="#FFEA83"></stop><stop offset="8.333%" stop-color="#FFDD35"></stop><stop offset="100%" stop-color="#FFA800"></stop></linearGradient></defs><path fill="url(#IconifyId1813088fe1fbc01fb466)" d="M255.153 37.938L134.897 252.976c-2.483 4.44-8.862 4.466-11.382.048L.875 37.958c-2.746-4.814 1.371-10.646 6.827-9.67l120.385 21.517a6.537 6.537 0 0 0 2.322-.004l117.867-21.483c5.438-.991 9.574 4.796 6.877 9.62Z"></path><path fill="url(#IconifyId1813088fe1fbc01fb467)" d="M185.432.063L96.44 17.501a3.268 3.268 0 0 0-2.634 3.014l-5.474 92.456a3.268 3.268 0 0 0 3.997 3.378l24.777-5.718c2.318-.535 4.413 1.507 3.936 3.838l-7.361 36.047c-.495 2.426 1.782 4.5 4.151 3.78l15.304-4.649c2.372-.72 4.652 1.36 4.15 3.788l-11.698 56.621c-.732 3.542 3.979 5.473 5.943 2.437l1.313-2.028l72.516-144.72c1.215-2.423-.88-5.186-3.54-4.672l-25.505 4.922c-2.396.462-4.435-1.77-3.759-4.114l16.646-57.705c.677-2.35-1.37-4.583-3.769-4.113Z"></path></svg>

# File: ./public/css_icon.svg
<svg version="1.1" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
<path d="m5 3l-.65 3.34h13.59l-.44 2.16h-13.58l-.66 3.33h13.59l-.76 3.81-5.48 1.81-4.75-1.81.33-1.64h-3.34l-.79 4 7.85 3 9.05-3 1.2-6.03.24-1.21 1.54-7.76h-16.94z" fill="#42a5f5"/>
</svg>


# File: ./public/html_icon.svg
<svg version="1.1" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
<path d="m12 17.56l4.07-1.13.55-6.1h-7.24l-.18-2.03h7.6l.2-1.99h-10l.56 6.01h6.89l-.23 2.58-2.22.6-2.22-.6-.14-1.66h-2l.29 3.19 4.07 1.13m-7.93-14.56h15.86l-1.43 16.2-6.5 1.8-6.5-1.8-1.43-16.2z" fill="#e44d26"/>
</svg>


# File: ./public/json_icon.svg
<svg version="1.1" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path d="m5 3h2v2h-2v5a2 2 0 0 1 -2 2 2 2 0 0 1 2 2v5h2v2h-2c-1.07-.27-2-.9-2-2v-4a2 2 0 0 0 -2 -2h-1v-2h1a2 2 0 0 0 2 -2v-4a2 2 0 0 1 2 -2m14 0a2 2 0 0 1 2 2v4a2 2 0 0 0 2 2h1v2h-1a2 2 0 0 0 -2 2v4a2 2 0 0 1 -2 2h-2v-2h2v-5a2 2 0 0 1 2 -2 2 2 0 0 1 -2 -2v-5h-2v-2h2m-7 12a1 1 0 0 1 1 1 1 1 0 0 1 -1 1 1 1 0 0 1 -1 -1 1 1 0 0 1 1 -1m-4 0a1 1 0 0 1 1 1 1 1 0 0 1 -1 1 1 1 0 0 1 -1 -1 1 1 0 0 1 1 -1m8 0a1 1 0 0 1 1 1 1 1 0 0 1 -1 1 1 1 0 0 1 -1 -1 1 1 0 0 1 1 -1z" style="fill:#fbc02d"/></svg>


# File: ./public/react_icon.svg
<svg version="1.1" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
<path d="m12 10.11c1.03 0 1.87.84 1.87 1.89 0 1-.84 1.85-1.87 1.85s-1.87-.85-1.87-1.85c0-1.05.84-1.89 1.87-1.89m-4.63 9.89c.63.38 2.01-.2 3.6-1.7-.52-.59-1.03-1.23-1.51-1.9-.82-.08-1.63-.2-2.4-.36-.51 2.14-.32 3.61.31 3.96m.71-5.74l-.29-.51c-.11.29-.22.58-.29.86.27.06.57.11.88.16l-.3-.51m6.54-.76l.81-1.5-.81-1.5c-.3-.53-.62-1-.91-1.47-.54-.03-1.11-.03-1.71-.03s-1.17 0-1.71.03c-.29.47-.61.94-.91 1.47l-.81 1.5.81 1.5c.3.53.62 1 .91 1.47.54.03 1.11.03 1.71.03s1.17 0 1.71-.03c.29-.47.61-.94.91-1.47m-2.62-6.72c-.19.22-.39.45-.59.72h.59.59c-.2-.27-.4-.5-.59-.72m0 10.44c.19-.22.39-.45.59-.72h-.59-.59c.2.27.4.5.59.72m4.62-13.22c-.62-.38-2 .2-3.59 1.7.52.59 1.03 1.23 1.51 1.9.82.08 1.63.2 2.4.36.51-2.14.32-3.61-.32-3.96m-.7 5.74l.29.51c.11-.29.22-.58.29-.86-.27-.06-.57-.11-.88-.16l.3.51m1.45-7.05c1.47.84 1.63 3.05 1.01 5.63 2.54.75 4.37 1.99 4.37 3.68s-1.83 2.93-4.37 3.68c.62 2.58.46 4.79-1.01 5.63-1.46.84-3.45-.12-5.37-1.95-1.92 1.83-3.91 2.79-5.38 1.95-1.46-.84-1.62-3.05-1-5.63-2.54-.75-4.37-1.99-4.37-3.68s1.83-2.93 4.37-3.68c-.62-2.58-.46-4.79 1-5.63 1.47-.84 3.46.12 5.38 1.95 1.92-1.83 3.91-2.79 5.37-1.95m-.29 9.31c.34.75.64 1.5.89 2.26 2.1-.63 3.28-1.53 3.28-2.26s-1.18-1.63-3.28-2.26c-.25.76-.55 1.51-.89 2.26m-10.16 0c-.34-.75-.64-1.5-.89-2.26-2.1.63-3.28 1.53-3.28 2.26s1.18 1.63 3.28 2.26c.25-.76.55-1.51.89-2.26m9 2.26l-.3.51c.31-.05.61-.1.88-.16-.07-.28-.18-.57-.29-.86l-.29.51m-2.89 4.04c1.59 1.5 2.97 2.08 3.59 1.7.64-.35.83-1.82.32-3.96-.77.16-1.58.28-2.4.36-.48.67-.99 1.31-1.51 1.9m-4.95-8.56l.3-.51c-.31.05-.61.1-.88.16.07.28.18.57.29.86l.29-.51m2.89-4.04c-1.59-1.5-2.97-2.08-3.6-1.7-.63.35-.82 1.82-.31 3.96.77-.16 1.58-.28 2.4-.36.48-.67.99-1.31 1.51-1.9z" fill="#00bcd4"/>
</svg>

# File: ./public/js_icon.svg
<svg version="1.1" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
<path d="m3 3h18v18h-18v-18m4.73 15.04c.4.85 1.19 1.55 2.54 1.55 1.5 0 2.53-.8 2.53-2.55v-5.78h-1.7v5.74c0 .86-.35 1.08-.9 1.08-.58 0-.82-.4-1.09-.87l-1.38.83m5.98-.18c.5.98 1.51 1.73 3.09 1.73 1.6 0 2.8-.83 2.8-2.36 0-1.41-.81-2.04-2.25-2.66l-.42-.18c-.73-.31-1.04-.52-1.04-1.02 0-.41.31-.73.81-.73.48 0 .8.21 1.09.73l1.31-.87c-.55-.96-1.33-1.33-2.4-1.33-1.51 0-2.48.96-2.48 2.23 0 1.38.81 2.03 2.03 2.55l.42.18c.78.34 1.24.55 1.24 1.13 0 .48-.45.83-1.15.83-.83 0-1.31-.43-1.67-1.03l-1.38.8z" fill="#ffca28"/>
</svg>


